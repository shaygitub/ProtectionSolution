#include "syscalls.h"
#include "helpers.h"
#include "SSDTGlobals.h"
//#include "VulnurableList.h"
#include <bcrypt.h>
#define SHA256_HASHSIZE 33
#define VULNLIST_SIZE 407
#pragma warning(disable : 4996)


NTSTATUS SSDT::SystemServiceDTHook(PVOID HookingFunction, ULONG Tag) {
	/*
	Business logic of hook:
	1) Get address of ServiceDescriptorTable with specific pattern matching in the kernel code section (.text)
	2) Get the address of the current function (will be put in *OriginalFunction) from the SSDT
	3) Add the address of the hooking function to the data of the trampoline dummy (SSDT entry is only 32 bits in x64, need to create stub hook and kump to that)
	4) Find an area inside the kernel's code section (.text) that can hold the data of the trampoline dummy hook (check sequence of nops big enough)
	5) Map the kernel's image into writeable memory, change protection settings to be able to write dummy hook into the kernel, write it into the kernel
	6) Disable WP (Write-Protected), patch the SSDT entry, enable WP protections
	7) Unmap the kernel image to save changes
	*/


	BYTE DummyTrampoline[] = { 0x50,  // push rax
							   0x48, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // movabs rax, HookingFunction
							   0x48, 0x87, 0x04, 0x24,  // xchg QWORD PTR [rsp],rax
							   0xc3 };  // ret (jmp to HookingFunction)
	PVOID TrampolineSection = NULL;  // Will hold the matching sequence of nop/int3 instructions for the trampoline hook
	PVOID KernelMapping = NULL;
	PMDL KernelModuleDescriptor = NULL;
	PULONG ServiceTableBase = NULL;  // Used to modify the actual entry in the SSDT
	KIRQL CurrentIRQL = NULL;
	ULONG SSDTEntryValue = 0;
	PVOID KernelImageBaseAddress = NULL;
	PVOID KernelTextSection = NULL;
	ULONG TextSectionSize = 0;
	PVOID* OriginalFunction = NULL;
	ULONG SyscallNumber = 0;


	// Check for invalid parameters:
	if (HookingFunction == NULL || Tag == 0) {
		DbgPrintEx(0, 0, "ProtectionDriver SSDT safe-hook failed (invalid parameters: %p, %lu)\n", HookingFunction, Tag);
		return STATUS_INVALID_PARAMETER;
	}


	// Make preperations for SSDT hook - get SSDT address, get ntoskrnl.exe image base address and get code section (.text section) address of the kernel:
	if (KiServiceDescriptorTable == NULL) {
		KiServiceDescriptorTable = (PSYSTEM_SERVICE_TABLE)SSDT::GetServiceDescriptorTable();
	}
	if (KiServiceDescriptorTable == NULL) {
		DbgPrintEx(0, 0, "ProtectionDriver SSDT safe-hook %lu failed (cannot find the service descriptor table base address)\n", SyscallNumber);
		return STATUS_NOT_FOUND;
	}
	KernelImageBaseAddress = memory_helpers::GetModuleBaseAddressADD("\\SystemRoot\\System32\\ntoskrnl.exe");

	if (KernelImageBaseAddress == NULL) {
		DbgPrintEx(0, 0, "ProtectionDriver SSDT safe-hook %lu failed (cannot find the base address of the kernel image)\n", SyscallNumber);
		return STATUS_NOT_FOUND;
	}
	if (KernelTextSection == NULL || TextSectionSize == 0) {
		KernelTextSection = (BYTE*)memory_helpers::GetTextSectionOfSystemModuleADD(KernelImageBaseAddress, &TextSectionSize);
	}
	if (KernelTextSection == NULL) {
		DbgPrintEx(0, 0, "ProtectionDriver SSDT safe-hook %lu failed (cannot find the base address of the .text section of the kernel)\n", SyscallNumber);
		return STATUS_NOT_FOUND;
	}


	// Get the address of the original function from the SSDT and copy the new function (HookingFunction) to the trampoline hook:
	switch (Tag) {
	case NTLOADDRIVER_TAG:
		OriginalFunction = &NtLoadDriverActual; SyscallNumber = NTLOADDRIVER_SYSCALL1809; break;
	default:
		DbgPrintEx(0, 0, "ProtectionDriver SSDT safe-hook failed (invalid tag: %lu)\n", Tag);
		return STATUS_INVALID_PARAMETER;
	}
	*OriginalFunction = (PVOID)SSDT::CurrentSSDTFuncAddr(SyscallNumber);
	RtlCopyMemory(&DummyTrampoline[3], &HookingFunction, sizeof(PVOID));


	// Find a long enough sequence of nop/int3 instructions in the kernel's .text section to put the trampoline hook in:
	TrampolineSection = memory_helpers::FindUnusedMemoryADD((BYTE*)KernelTextSection, TextSectionSize, sizeof(DummyTrampoline));
	if (TrampolineSection == NULL) {
		DbgPrintEx(0, 0, "ProtectionDriver SSDT safe-hook %lu failed (cannot find sequence of %zu bytes that are nop/int3 instructions, %p, %lu)\n", SyscallNumber, sizeof(DummyTrampoline), KernelTextSection, TextSectionSize);
		return STATUS_NOT_FOUND;
	}


	// Map the kernel into writeable space to be able to put trampoline hook in and modify the SSDT entry:
	KernelModuleDescriptor = IoAllocateMdl(TrampolineSection, sizeof(DummyTrampoline), 0, 0, NULL);
	if (KernelModuleDescriptor == NULL) {
		DbgPrintEx(0, 0, "ProtectionDriver SSDT safe-hook %lu failed (cannot allocate module descriptor to write into the kernel image, %p, %zu)\n", SyscallNumber, TrampolineSection, sizeof(DummyTrampoline));
		return STATUS_MEMORY_NOT_ALLOCATED;
	}
	MmProbeAndLockPages(KernelModuleDescriptor, KernelMode, IoWriteAccess);
	KernelMapping = MmMapLockedPagesSpecifyCache(KernelModuleDescriptor, KernelMode, MmCached, NULL, FALSE, NormalPagePriority);
	if (KernelMapping == NULL) {
		MmUnlockPages(KernelModuleDescriptor);
		IoFreeMdl(KernelModuleDescriptor);
		DbgPrintEx(0, 0, "ProtectionDriver SSDT safe-hook %lu failed (cannot map the kernel into writeable memory)\n", SyscallNumber);
		return STATUS_UNSUCCESSFUL;
	}


	// Patch the SSDT entry and write trampoline hook into the kernel:
	ServiceTableBase = (PULONG)KiServiceDescriptorTable->ServiceTableBase;
	CurrentIRQL = SSDT::DisableWriteProtection();  // Disable WP (Write-Protection) to be able to write into the SSDT
	RtlCopyMemory(KernelMapping, DummyTrampoline, sizeof(DummyTrampoline));  // Copy the trampoline hook in the kernel's memory
	SSDTEntryValue = SSDT::GetOffsetFromSSDTBase((ULONG64)TrampolineSection);
	SSDTEntryValue = SSDTEntryValue & 0xFFFFFFF0;
	SSDTEntryValue += ServiceTableBase[SyscallNumber] & 0x0F;
	ServiceTableBase[SyscallNumber] = SSDTEntryValue;
	SSDT::EnableWriteProtection(CurrentIRQL);  // Enable WP (Write-Protection) to restore earlier settings


	// Unmap the kernel image:
	MmUnmapLockedPages(KernelMapping, KernelModuleDescriptor);
	MmUnlockPages(KernelModuleDescriptor);
	IoFreeMdl(KernelModuleDescriptor);
	DbgPrintEx(0, 0, "ProtectionDriver SSDT safe-hook %lu succeeded\n", SyscallNumber);
	return STATUS_SUCCESS;
}


NTSTATUS NtLoadDriverProtection(IN PUNICODE_STRING DriverRegistryPath) {
	NTSTATUS Status = STATUS_UNSUCCESSFUL;
	WCHAR SystemRootPrefix[] = L"\\SystemRoot\\";
	WCHAR SystemRootReplace[] = L"\\DosDevices\\C:\\Windows\\";
	WCHAR System32Prefix[] = L"System32\\";
	WCHAR System32Prepend[] = L"\\DosDevices\\C:\\Windows\\";
	WCHAR FilePath[MAX_PATH] = { 0 };

	RTL_QUERY_REGISTRY_TABLE DriverKeyQueriedValues[2] = { 0 };
	WCHAR KeyValue[MAX_PATH] = {0};

	HANDLE DriverFileHandle = NULL;
	UNICODE_STRING FileNameUnicode = { 0 };
	IO_STATUS_BLOCK DriverStatusBlock = { 0 };
	OBJECT_ATTRIBUTES DriverObjectAttrs = { 0 };
	FILE_STANDARD_INFORMATION DriverFileInfo = { 0 };
	LARGE_INTEGER DriverFileSize = { 0 };
	PVOID DriverDataPool = NULL;
	PVOID HashedDriverDataPool = NULL;
	ULONG HashedDriverDataLength = 0;
	LoadDriver ActualNtLoadDriver = NULL;


	// Initialize requested values/subkeys list for RtlQueryRegistryValues + mark end of table:
	DriverKeyQueriedValues[0].Name = L"ImagePath";
	DriverKeyQueriedValues[0].Flags = RTL_QUERY_REGISTRY_DIRECT | RTL_QUERY_REGISTRY_TYPECHECK;
	DriverKeyQueriedValues[0].EntryContext = KeyValue;
	DriverKeyQueriedValues[1].Name = NULL;
	DriverKeyQueriedValues[1].QueryRoutine = NULL;
	if (!NT_SUCCESS(RtlQueryRegistryValues(RTL_REGISTRY_ABSOLUTE, DriverRegistryPath->Buffer, DriverKeyQueriedValues, NULL, NULL))) {
		goto CallActual;
	}
	FileNameUnicode.Buffer = KeyValue;
	FileNameUnicode.Length = (USHORT)(wcslen(KeyValue) * sizeof(WCHAR));
	FileNameUnicode.MaximumLength = (USHORT)((wcslen(KeyValue) + 1) * sizeof(WCHAR));
	DbgPrintEx(0, 0, "ProtectionDriver NtLoadDriver() log - Raw ImagePath specified in registry key is %wZ\n", &FileNameUnicode);


	// Known instances - straight paths, starts with "System32\\...", starts with "\\SystemRoot\\":
	if (RtlCompareMemory(KeyValue, SystemRootPrefix, wcslen(SystemRootPrefix) * sizeof(WCHAR)) == wcslen(SystemRootPrefix) * sizeof(WCHAR)) {
		wcscat_s(FilePath, SystemRootReplace);
		wcscat_s(FilePath, (WCHAR*)((ULONG64)KeyValue + (wcslen(SystemRootPrefix) * sizeof(WCHAR))));
	}
	else if (RtlCompareMemory(KeyValue, System32Prefix, wcslen(System32Prefix) * sizeof(WCHAR)) == wcslen(System32Prefix) * sizeof(WCHAR)) {
		wcscat_s(FilePath, System32Prepend);
		wcscat_s(FilePath, KeyValue);
	}
	else {
		wcscat_s(FilePath, KeyValue);
	}
	FileNameUnicode.Buffer = FilePath;
	FileNameUnicode.Length = (USHORT)(wcslen(FilePath) * sizeof(WCHAR));
	FileNameUnicode.MaximumLength = (USHORT)((wcslen(FilePath) + 1) * sizeof(WCHAR));
	DbgPrintEx(0, 0, "ProtectionDriver NtLoadDriver() log - Fixed/Resolved ImagePath specified in registry key is %wZ\n", &FileNameUnicode);


	// Open handle to driver file (and verify existence):
	InitializeObjectAttributes(&DriverObjectAttrs, &FileNameUnicode, OBJ_CASE_INSENSITIVE | OBJ_KERNEL_HANDLE, NULL, NULL);
	if (!NT_SUCCESS(NtCreateFile(&DriverFileHandle, GENERIC_READ | SYNCHRONIZE, &DriverObjectAttrs, &DriverStatusBlock, NULL,
		FILE_ATTRIBUTE_NORMAL, FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE, FILE_OPEN, FILE_SYNCHRONOUS_IO_NONALERT,
		NULL, 0))) {
		ObDereferenceObject(&DriverObjectAttrs);
		DbgPrintEx(0, 0, "ProtectionDriver NtLoadDriver() log - Failed to create handle for driver file %wZ\n", &FileNameUnicode);
		goto CallActual;
	}


	// Get driver file size and allocate memory for driver data:
	if (!NT_SUCCESS(ZwQueryInformationFile(DriverFileHandle, &DriverStatusBlock, &DriverFileInfo,
		sizeof(DriverFileInfo), FileStandardInformation))) {
		NtClose(DriverFileHandle);
		ObDereferenceObject(&DriverObjectAttrs);
		DbgPrintEx(0, 0, "ProtectionDriver NtLoadDriver() log - Failed to get size of driver file %wZ\n", &FileNameUnicode);
		goto CallActual;
	}
	DriverFileSize = DriverFileInfo.EndOfFile;
	DriverDataPool = ExAllocatePoolWithTag(NonPagedPool, DriverFileSize.QuadPart, 'NlDs');		
	if (DriverDataPool == NULL) {
		NtClose(DriverFileHandle);
		ObDereferenceObject(&DriverObjectAttrs);
		DbgPrintEx(0, 0, "ProtectionDriver NtLoadDriver() log - Failed to allocate memory for data of driver file %wZ\n", &FileNameUnicode);
		goto CallActual;
	}
				
	// Read driver file data into the pool:
	if (!NT_SUCCESS(NtReadFile(DriverFileHandle, NULL, NULL, NULL, &DriverStatusBlock, DriverDataPool,
		(ULONG)DriverFileSize.QuadPart, 0, NULL))) {
		NtClose(DriverFileHandle);
		ExFreePool(DriverDataPool);
		ObDereferenceObject(&DriverObjectAttrs);
		DbgPrintEx(0, 0, "ProtectionDriver NtLoadDriver() log - Failed to read data of driver file %wZ to memory pool\n", &FileNameUnicode);
		goto CallActual;
	}
	

	// Get the SHA256 hash of the driver data:
	Status = general_helpers::CreateDataHashADD(DriverDataPool, (ULONG)DriverFileSize.QuadPart,
		BCRYPT_SHA256_ALGORITHM, &HashedDriverDataPool, &HashedDriverDataLength);
	if (!NT_SUCCESS(Status) || HashedDriverDataLength == 0 || HashedDriverDataPool == NULL) {
		NtClose(DriverFileHandle);
		ExFreePool(DriverDataPool);
		ObDereferenceObject(&DriverObjectAttrs);
		DbgPrintEx(0, 0, "ProtectionDriver NtLoadDriver() log - Failed to create SHA256 hash of driver file %wZ, status: 0x%x\n", &FileNameUnicode, Status);
		goto CallActual;
	}


	// Compare the driver's SHA256 hash to the vulnurable list:
	for (ULONG VulnHashIndex = 0; VulnHashIndex < VULNLIST_SIZE; VulnHashIndex++) {
		if (RtlCompareMemory(VulnurableByteList[VulnHashIndex], HashedDriverDataPool, SHA256_HASHSIZE) == SHA256_HASHSIZE) {
			NtClose(DriverFileHandle);
			ExFreePool(DriverDataPool);
			ExFreePool(HashedDriverDataPool);
			ObDereferenceObject(&DriverObjectAttrs);
			DbgPrintEx(0, 0, "ProtectionDriver NtLoadDriver() log - Found vulnurable SHA256 hash of driver file %wZ at index %lu in list, terminating ...\n", &FileNameUnicode, VulnHashIndex);
			return STATUS_UNSUCCESSFUL;  // Current driver is vulnurable, fail the loading process of the driver
		}
	}


	// Free remaining data:
	NtClose(DriverFileHandle);
	ExFreePool(DriverDataPool);
	ExFreePool(HashedDriverDataPool);
	ObDereferenceObject(&DriverObjectAttrs);

CallActual:
	if (ActualNtLoadDriver == NULL) {
		DbgPrintEx(0, 0, "ProtectionDriver NtLoadDriver() log - Original address of NtLoadDriver() = NULL\n");
		return STATUS_UNSUCCESSFUL;
	}
	ActualNtLoadDriver = (LoadDriver)ActualNtLoadDriver;
	return ActualNtLoadDriver(DriverRegistryPath);
}


// List of SHA256 hashes of vulnurable drivers from loldrivers.io:
const char* VulnurableByteList[] = {
"\x45\xe5\x97\x7b\x8d\x5b\xae\xc7\x76\xeb\x2e\x62\xa8\x49\x81\xa8\xe4\x6f\x6c\xe1\x79\x47\xc9\xa7\x6f\xa1\xf9\x55\xdc\x54\x72\x71",
"\x09\xbe\xdb\xf7\xa4\x1e\x0f\x8d\xab\xe4\xf4\x1d\x33\x1d\xb5\x83\x73\xce\x15\xb2\xe9\x20\x45\x40\x87\x3a\x18\x84\xf3\x8b\xdd\xe1",
"\x49\xed\x27\x46\x07\x30\xb6\x24\x03\xc1\xd2\xe4\x93\x05\x73\x12\x1a\xb0\xc8\x6c\x44\x28\x54\xbc\x0a\x62\x41\x5c\xa4\x45\xa8\x10",
"\x3a\x95\xcc\x82\x17\x30\x32\xb8\x2a\x0f\xfc\x7d\x2e\x43\x8d\xf6\x4c\x13\xbc\x16\xb4\x57\x42\x14\xc9\xfe\x3b\xe3\x72\x50\x92\x5e",
"\xda\x70\xfa\x44\x29\x0f\x94\x9e\x9b\x3e\x0f\xcf\xe0\x50\x3d\xe4\x6e\x82\xe0\x47\x2e\x8e\x3c\x36\x0d\xa3\xfd\x2b\xfa\x36\x4e\xee",
"\x62\x78\xbc\x78\x51\x13\x83\x1b\x2e\xc3\x36\x8e\x2c\x9c\x9e\x89\xe8\xac\xa4\x90\x85\xa5\x9d\x8d\x38\xda\xc6\x51\x47\x1d\x64\x40",
"\xbb\x50\x81\x8a\x07\xb0\xeb\x1b\xd3\x17\x46\x71\x39\xb7\xeb\x4b\xad\x6c\xd8\x90\x53\xfe\xcd\xab\xfe\xae\x11\x16\x89\x82\x59\x55",
"\xe4\x65\x8d\x93\x54\x4f\x69\xf5\xcb\x9a\xa6\xd9\xfe\xc4\x20\xfe\xcc\x87\x50\xcb\x57\xe1\xe9\x79\x8d\xa3\x8c\x13\x9d\x44\xf2\xeb",
"\x4f\x02\xae\xd3\x75\x0b\xc6\xa9\x24\xc7\x5e\x77\x44\x04\xf2\x59\xf7\x21\xd8\xf4\x08\x1e\xd6\x8a\xa0\x1c\xf7\x3c\xa5\x43\x0f\x85",
"\x2e\x6b\x33\x95\x97\xa8\x9e\x87\x5f\x17\x50\x23\xed\x95\x2a\xaa\xc6\x4e\x9d\x20\xd4\x57\xbb\xc0\x7a\xcf\x15\x86\xe7\xfe\x2d\xf8",
"\xcc\x68\x7f\xe3\x74\x1b\xbd\xe1\xdd\x14\x2e\xac\x0e\xf5\x9f\xd1\xd4\x45\x7d\xae\xe4\x3c\xdd\xe2\x3b\xb1\x62\xef\x28\xd0\x4e\x64",
"\x47\x10\xac\xca\x9c\x4a\x61\xe2\xfc\x6d\xaa\xfb\x09\xd7\x2e\x11\xb6\x03\xef\x8c\xd7\x32\xe1\x2a\x84\x27\x4e\xa9\xad\x6d\x43\xbe",
"\xdd\x62\x80\x61\xd6\xe5\x3f\x3f\x0b\x44\xf4\x09\xad\x91\x4b\x34\x94\xc5\xd7\xb5\xff\x6f\xf0\xe8\xfc\x31\x61\xaa\xce\xc9\x3e\x96",
"\x03\xe0\x58\x14\x32\xf5\xc8\xcc\x72\x7a\x8a\xa3\x87\xf5\xb6\x9f\xf8\x4d\x38\xd0\xdf\x6f\x12\x26\xc1\x9c\x6e\x96\x0a\x81\xe1\xe9",
"\xde\xd2\x92\x7f\x9a\x4e\x64\xee\xfd\x09\xd0\xca\xba\x78\xe9\x4f\x30\x9e\x3a\x62\x92\x84\x1a\xe8\x1d\x55\x28\xca\xb1\x09\xf9\x5d",
"\x30\x06\x1e\xf3\x83\xe1\x8e\x74\xbb\x06\x7f\xbc\xa6\x95\x44\xf1\xa7\x54\x4e\x8d\xc0\x17\xd4\xe7\x63\x3d\x83\x79\xaf\xf4\xc3\xc3",
"\x8d\xaf\xe5\xf3\xd0\x52\x7b\x66\xf6\x85\x75\x59\xe3\xc8\x18\x72\x69\x90\x03\xe0\xf2\xff\xda\x92\x02\xa1\xb5\xe2\x9d\xb2\x00\x2e",
"\x31\x6a\x27\xe2\xbd\xb8\x62\x22\xbc\x7c\x8a\xf4\xe5\x47\x21\x66\xb0\x2a\xec\x7f\x3f\x52\x69\x01\xce\x93\x90\x94\xe5\x86\x1f\x6d",
"\x0e\x53\xb5\x84\x15\xfa\x68\x55\x29\x28\x62\x21\x18\xd5\xb8\xa3\xa8\x51\xb2\xfc\x51\x27\x09\xa9\x0b\x63\xba\x46\xac\xda\x8b\x6b",
"\x9f\xc2\x94\x80\x40\x7e\x51\x79\xaa\x8e\xa4\x16\x82\x40\x9b\x4e\xa3\x3f\x1a\x42\x02\x62\x77\x61\x3d\x64\x84\xe5\x41\x9d\xe3\x74",
"\x0d\xa7\x46\xe4\x9f\xd6\x62\xbe\x91\x0d\x0e\x36\x69\x34\xa7\xe0\x28\x98\x71\x4e\xaa\xa5\x77\xe2\x61\xab\x40\xeb\x44\x22\x2b\x5c",
"\x24\xc9\x00\x02\x4d\x21\x35\x49\x50\x23\x01\xc3\x66\xd1\x8c\x31\x88\x87\x63\x0f\x04\xc9\x6b\xf0\xa3\xd6\xba\x74\xe0\xdf\x16\x4f",
"\x27\x05\x47\x55\x20\x60\xc6\xf4\xf5\xb2\xeb\xd5\x7a\x63\x6d\x5e\x71\xd5\xf8\xa9\xd4\x30\x5c\x2b\x0f\xe5\xdb\x0a\xa2\xf3\x89\xcc",
"\x44\x22\x85\x1a\x0a\x10\x2f\x65\x4e\x95\xd3\xb7\x9c\x35\x7a\xe3\xaf\x1b\x09\x6d\x7d\x15\x76\x66\x3c\x02\x7c\xfb\xc0\x4a\xba\xf9",
"\x78\x77\xc1\xb0\xe7\x42\x94\x53\xb7\x50\x21\x8c\xa4\x91\xc2\x82\x5d\xae\x68\x4a\xd9\x61\x66\x42\xef\xf7\xb4\x17\x15\xc7\x0a\xca",
"\x0f\x03\x59\x48\x84\x84\x32\xbc\x24\x37\x04\x04\x17\x39\xe4\x9b\x52\x8f\x35\xc8\x2a\x5b\xe9\x22\xd9\xe3\xb8\xa4\xc4\x43\x98\xff",
"\x45\x5b\xc9\x8b\xa3\x2a\xda\xb8\xb4\x7d\x2d\x89\xbd\xba\xdc\xa4\x91\x0f\x91\xc1\x82\xab\x2f\xc3\x21\x1b\xa0\x7d\x37\x84\x53\x7b",
"\xbb\xf5\x64\xa0\x27\x84\xd5\x3b\x80\x06\x33\x34\x06\x80\x7c\x35\x39\xee\x4a\x59\x45\x85\xb1\xf3\x71\x33\x25\x90\x4c\xb7\x30\xec",
"\x0f\xd2\xdf\x82\x34\x1b\xf5\xeb\xb8\xa5\x36\x82\xe6\x0d\x08\x97\x81\x00\xc0\x1a\xcb\x0b\xed\x7b\x6c\xe2\x87\x6a\xda\x80\xf6\x70",
"\x22\xda\x5a\x05\x5b\x7b\x17\xc6\x9d\xef\x9f\x5a\xf5\x4e\x25\x7c\x75\x15\x07\xe7\xb6\xb9\xa8\x35\xfc\xf6\x24\x5a\xb9\x0a\xe7\x50",
"\x99\x4f\x32\x2d\xef\x98\xc9\x9a\xec\x7e\xa0\x03\x6e\xf5\xf4\xb8\x02\x12\x04\x58\x78\x2a\xe3\x86\x7d\x11\x6d\x55\x21\x5c\x56\xe4",
"\xdd\x57\x3f\x23\xd6\x56\x81\x80\x36\xfc\x9a\xe1\x06\x4e\xda\x31\xac\xa8\x6a\xcb\x9b\xc4\x4a\x6e\x12\x7d\xb3\xea\x11\x2a\x90\x94",
"\xf0\x5b\x1e\xe9\xe2\xf6\xab\x70\x4b\x89\x19\xd5\x07\x1b\xec\xbc\xe6\xf9\xd0\xf9\xd0\xba\x32\xa4\x60\xc4\x1d\x52\x72\x13\x4a\xbe",
"\x37\x02\x28\x38\xc4\x32\x7e\x2a\x58\x05\xe8\x47\x93\x30\xd8\xff\x6f\x8c\xd3\x49\x50\x79\x90\x5e\x86\x78\x11\x90\x6c\x98\xea\x20",
"\xcc\x38\x3a\xd1\x1e\x9d\x06\x04\x7a\x15\x58\xed\x34\x3f\x38\x94\x92\xda\x3a\xc2\xb8\x4b\x71\x46\x2a\xee\x50\x2a\x2f\xa6\x16\xc8",
"\x5b\x96\x23\xda\x9b\xa8\xe5\xc8\x0c\x49\x47\x3f\x40\xff\xe7\xad\x31\x5d\xca\xdf\xfc\x32\x30\xaf\xdc\x9d\x92\x26\xd6\x0a\x71\x5a",
"\xc6\x0f\xcf\xf9\xc8\xe5\x24\x3b\xbb\x22\xec\x94\x61\x8b\x9d\xcb\x02\xc5\x9b\xb4\x9b\x90\xc0\x4d\x7d\x6a\xb3\xeb\xbd\x58\xdc\x3a",
"\x49\x7a\x83\x66\x93\xbe\x1b\x33\x09\x93\xe2\xbe\x64\xf6\xc7\x1b\xf2\x90\xc1\x27\xfa\xca\x1c\x05\x6a\xbd\x0d\xc3\x74\x65\x48\x30",
"\xb4\x8a\x30\x9e\xe0\x96\x0d\xa3\xca\xaa\xaf\x1e\x79\x4e\x8c\x40\x99\x93\xae\xb3\xa2\xb6\x48\x09\xf3\x6b\x97\xaa\xc8\xa1\xe6\x2a",
"\x21\xcc\xdd\x30\x6b\x51\x83\xc0\x0e\xcf\xd0\x47\x5b\x31\x52\xe7\xd9\x4b\x92\x1e\x85\x8e\x59\xb6\x8a\x03\xe9\x25\xd1\x71\x5f\x21",
"\xf8\x43\x0b\xdc\x6f\xd0\x1f\x42\x21\x7d\x66\xd8\x7a\x3e\xf6\xf6\x6c\xb2\x70\x0e\xbb\x39\xc4\xf2\x5c\x8b\x85\x18\x58\xcc\x4b\x35",
"\x89\x22\xbe\x14\xc6\x57\xe6\x03\x17\x9f\x1d\xd9\x4d\xc3\x2d\xe7\xc9\x9d\x22\x68\xac\x92\xd4\x29\xc4\xfd\xda\x73\x96\xc3\x2e\x50",
"\x9d\x58\xf6\x40\xc7\x29\x59\x52\xb7\x1b\xdc\xb4\x56\xca\xe3\x72\x13\xba\xcc\xdc\xd3\x03\x2c\x1e\x3a\xeb\x54\xe7\x90\x81\xf3\x95",
"\x47\x5e\x50\x16\xc9\xc0\xf5\xa1\x27\x89\x6f\x91\x79\xa1\xb1\x57\x7a\x67\xb3\x57\xf3\x99\xab\x5a\x1e\x68\xaa\xb0\x71\x34\x72\x9a",
"\x15\x9e\x7c\x5a\x12\x15\x7a\xf9\x2e\x0d\x14\xa0\xd3\xea\x11\x6f\x91\xc0\x9e\x21\xa9\x83\x14\x86\xe6\xdc\x59\x2c\x93\xc1\x09\x80",
"\x18\xc9\x09\xa2\xb8\xc5\xe1\x68\x21\xd6\xef\x90\x8f\x56\x88\x1a\xa0\xec\xce\xea\xcc\xb5\xfa\x1e\x54\x99\x59\x35\xfc\xfd\x12\xf7",
"\x69\x08\xeb\xf5\x2e\xb1\x9c\x67\x19\xa0\xb5\x08\xd1\xe2\x12\x8f\x19\x8d\x10\x44\x15\x51\xcb\xfb\x9f\x40\x31\xd3\x82\xf5\x22\x9f",
"\x09\xb0\xe0\x7a\xf8\xb1\x7d\xb1\xd8\x96\xb7\x8d\xa4\xdd\x3f\x55\xdb\x76\x73\x8e\xe1\xf4\xce\xd0\x83\xa9\x7d\x73\x73\x34\xa1\x84",
"\xed\xeb\x35\xe4\x34\x10\x34\xb2\xde\x38\x90\x17\xc4\x88\x4b\x08\x1a\x82\x1f\x34\x34\x9a\x62\x08\x97\xa2\xa8\x45\xc8\x4c\xb0\x9e",
"\x7e\x01\x24\xfc\xc7\xc9\x5f\xdc\x34\x40\x8c\xf1\x54\xcb\x41\xe6\x54\xda\xde\x8b\x89\x8c\x71\xad\x58\x7b\x20\x90\xb1\xda\x30\xd7",
"\x1b\x7f\xb1\x54\xa7\xb7\x90\x3a\x3c\x81\xf1\x2f\x4b\x09\x4f\x24\xa3\xc6\x0a\x6a\x8c\xff\xca\x89\x4c\x67\xc2\x64\xab\x75\x45\xfa",
"\x20\xf1\x1a\x64\xbc\x45\x48\xf4\xed\xb4\x7e\x3d\x34\x18\xda\x0f\x6d\x54\xa8\x31\x58\x22\x4b\x71\x66\x2a\x62\x92\xbf\x45\xb5\xfb",
"\xc8\xf9\xe1\xad\x7b\x8c\xce\x62\xfb\xa3\x49\xa0\x0b\xc1\x68\xc8\x49\xd4\x2c\xfb\x2c\xa5\xb2\xc6\xcc\x4b\x51\xd0\x54\xe0\xc4\x97",
"\x3e\x27\x4d\xf6\x46\xf1\x91\xd2\x70\x5c\x0b\xea\xa3\x5e\xee\xa8\x48\x08\x59\x3c\x3b\x33\x38\x09\xf1\x36\x32\x78\x2e\x27\xad\x75",
"\x61\x91\xc2\x04\x26\xdd\x9b\x13\x11\x22\xfb\x97\xe4\x5b\xe6\x4a\x4d\x6c\xe9\x8c\xc5\x83\x40\x6f\x38\x47\x34\x34\x63\x6d\xde\xdc",
"\x09\x23\x49\xae\xbd\xac\x28\x29\x4d\xba\xd1\x65\x67\x59\xd8\x46\x1f\x36\x2d\x1a\x36\xb0\x10\x54\xdc\xcf\x86\x1d\x97\xbe\xad\xf0",
"\x15\xfb\x48\x6b\x6b\x8c\x2a\x2f\x1b\x06\x7f\x48\xfb\xa1\x0c\x2f\x16\x46\x38\xfe\x5e\x6c\xee\x61\x8f\xb8\x44\x63\x57\x8e\xca\xc9",
"\xf8\x5c\xca\x4b\xad\xff\x17\xd1\xaa\x90\x75\x21\x53\xcc\xec\x77\xa6\x8a\xd2\x82\xb6\x9e\x39\x85\xfd\xc4\x74\x3e\xae\xa8\x50\x04",
"\xe6\xa7\xa4\x97\x01\x05\x79\xfd\xe6\x9c\xd5\x2b\xed\x8d\xe2\x8d\xb6\x10\xc3\x3b\xbc\x5c\xe0\x77\x44\x59\xdc\xf6\x46\x57\xb8\x02",
"\x2a\x65\x2d\xe6\xb6\x80\xd5\xad\x92\x37\x6a\xd3\x23\x02\x18\x50\xda\xb2\xc6\x53\xab\xf0\x6e\xdf\x26\x12\x0f\x77\x14\xb8\xe0\x8a",
"\xe1\xcb\x86\x38\x67\x57\xb9\x47\xb3\x90\x86\xcc\x86\x39\xda\x98\x8f\x6e\x80\x18\xca\x99\x95\xdd\x66\x9b\xdc\x03\xc8\xd3\x9d\x7d",
"\x61\x65\x49\x1e\x83\x91\xea\xc9\xc0\xe3\xb9\xa2\xa3\x1e\x16\x92\xa5\x67\xc1\x6c\xbf\xa3\x6d\x7a\x88\xc4\x01\xff\xae\x1f\x6c\x63",
"\x4c\xff\x6e\x53\x43\x0b\x81\xec\xc4\xfa\xe4\x53\xe5\x9a\x03\x53\xbc\xfe\x73\xdd\x57\x80\xab\xfc\x35\xf2\x99\xc1\x6a\x97\x99\x8e",
"\x47\xf0\x8f\x7d\x30\xd8\x24\xa8\xf4\xbb\x8a\x98\x91\x64\x01\xa3\x7c\x0f\xd8\x50\x2d\xb3\x08\xab\xa9\x1f\xe3\x11\x2b\x89\x2d\xcc",
"\x05\xf0\x52\xc6\x4d\x19\x2c\xf6\x9a\x46\x2a\x5e\xc1\x6d\xda\x0d\x43\xca\x5d\x02\x45\x90\x0c\x9f\xcb\x92\x01\x68\x5a\x2e\x77\x48",
"\x3a\x65\xd1\x4f\xd3\xb1\xb5\x98\x10\x84\xcd\xbd\x29\x3d\xc6\xf4\x55\x89\x11\xea\x18\xdd\x80\x17\x7d\x1e\x5b\x54\xd8\x5b\xca\xa0",
"\x29\xd7\x65\xe2\x9d\x2f\x06\xeb\x51\x1e\xe8\x8b\x2e\x51\x4c\x9d\xf1\xa9\x02\x0a\x76\x8d\xdd\x3d\x22\x78\xd9\x04\x5e\x9c\xdb\x4a",
"\xd7\xbc\x73\x06\xcb\x48\x9f\xe4\xc2\x85\xbb\xed\xdc\x6d\x1a\x09\xe8\x14\xef\x55\xcf\x30\xbd\x5b\x8d\xaf\x87\xa5\x23\x96\xf1\x02",
"\x05\xb1\x46\xa4\x8a\x69\xdd\x62\xa0\x27\x59\x48\x7e\x76\x9b\xd3\x0d\x39\xf1\x63\x74\xbc\x76\xc8\x64\x53\xb4\xae\x59\xe7\xff\xa4",
"\x8e\x03\x5b\xeb\x02\xa4\x11\xf8\xa9\xe9\x2d\x4c\xf1\x84\xad\x34\xf5\x2b\xbd\x0a\x81\xa5\x0c\x22\x2c\xdd\x47\x06\xe4\xe4\x51\x04",
"\xb0\xdc\xdb\xdc\x62\x94\x9c\x98\x1c\x4f\xc0\x4c\xce\xa6\x4b\xe0\x08\x67\x6d\x23\x50\x6f\xc0\x56\x37\xd9\x68\x61\x51\xa4\xb7\x7f",
"\xe4\xa7\xda\x2c\xf5\x9a\x4a\x21\xfc\x42\xb6\x11\xdf\x1d\x59\xca\xe7\x50\x51\x92\x5a\x7d\xdf\x42\xbf\x21\x6c\xc1\xa0\x26\xea\xdb",
"\xab\x09\x25\x39\x8f\x3f\xa6\x9a\x67\xea\xce\xe2\xbb\xb7\xb3\x4a\xc3\x95\xbb\x30\x9d\xf7\xfc\x7a\x9a\x9b\x81\x03\xef\x41\xed\x7a",
"\xea\xa5\xda\xe3\x73\x55\x30\x24\xd7\x29\x41\x05\xe4\xe0\x7d\x99\x6f\x3a\x8b\xd4\x7c\x77\x0c\xdf\x8d\xf7\x9b\xf5\x76\x19\xa8\xcd",
"\x81\xc7\xbb\x39\x10\x0d\x35\x8f\x82\x86\xda\x5e\x9a\xa8\x38\x60\x6c\x98\xdf\xcc\x26\x3e\x9a\x82\xed\x91\xcd\x43\x8c\xb1\x30\xd1",
"\x6d\xaf\xd1\x5e\xe2\xfb\xce\x87\xfe\xf1\x27\x93\x12\x66\x0f\xc3\x99\xc4\x16\x8f\x55\xb6\xe6\xd4\x63\xbf\x68\x0f\x19\x79\xad\xcf",
"\x7a\x84\x70\x35\x52\xae\x03\x2a\x0d\x16\x99\xa0\x81\xe4\x22\xed\x6c\x95\x8b\xbe\x56\xd5\xb4\x18\x39\xc8\xbf\xa6\x39\x5b\xee\x1d",
"\x80\xcb\xba\x9f\x40\x4d\xf3\xe6\x42\xf2\x2c\x47\x66\x64\xd6\x3d\x7c\x22\x9d\x45\xd3\x4f\x5c\xd0\xe1\x9c\x65\xeb\x41\xbe\xce\xc3",
"\x4b\xf9\x74\xf5\xd3\x48\x96\x38\xa4\x8e\xe5\x08\xb4\xa8\xcf\xa0\xf0\x26\x29\x09\x77\x8c\xcd\xd2\xe8\x71\x17\x2b\x71\x65\x4d\x89",
"\x0c\x1b\x21\x97\x8c\x6a\xef\x88\x1f\x05\x6f\x7b\x9c\x90\x9b\x56\x48\x80\x19\x45\x9e\xd2\x56\x51\x1d\x78\xa4\x58\x8d\x1a\xa7\xa4",
"\x50\x96\x28\xb6\xd1\x6d\x24\x28\x03\x13\x11\xd7\xbd\x2a\xdd\x8d\x5f\x51\x60\xe9\xec\xc0\xcd\x90\x9f\x1e\x82\xbb\xbb\x32\x34\xd6",
"\xdb\xa8\xdb\x47\x2e\x51\xed\xd5\x9f\x0b\xba\xf4\xe0\x9d\xf7\x16\x13\xd4\xdd\x26\xfd\x05\xf1\x4a\x9b\xc7\xe3\xfc\x21\x7a\x78\xaa",
"\x58\xa7\x4d\xce\xb2\x02\x2c\xd8\xa3\x58\xb9\x2a\xcd\x1b\x48\xa5\xe0\x1c\x52\x4c\x3b\x01\x95\xd7\x03\x3e\x4b\xd5\x5e\xff\x44\x95",
"\x8b\xf8\x4b\xed\x9b\x5f\xa4\x57\x61\x82\xc8\x4d\x2f\x31\x67\x9d\xc4\x72\xac\xd0\xf8\x3c\x98\x13\x49\x8e\x9f\x71\xed\x9f\xef\x3e",
"\x34\x2c\xf8\x84\x84\x0f\xc2\xb4\x8c\x96\x39\x8f\x69\x0a\x18\x01\xed\x8a\xc1\xea\x59\x30\x5a\xf9\xe3\xd0\x70\xd1\x3e\xf8\x56\x01",
"\x70\xaf\xdc\x0e\x11\xdb\x84\x0d\x53\x67\xaf\xe5\x3c\x35\xd9\x64\x2c\x1c\xf6\x16\xc7\x83\x2a\xb2\x83\x78\x1d\x08\x59\x88\xe5\x05",
"\x33\x90\x91\x9b\xb2\x8d\x5c\x36\xcc\x34\x8f\x9e\xf2\x3b\xe5\xfa\x49\xbf\xd8\x12\x63\xeb\x77\x40\x82\x6e\x44\x37\xcb\xe9\x04\xcd",
"\x33\xbd\xaf\x3a\xb1\x41\xdb\x0f\x4c\x6a\x2c\x1f\x9f\xb0\x47\xb4\xe5\xc6\xfa\x6d\xdc\x70\x9d\x90\x5e\xfd\xd2\x4c\x2b\x43\x04\x1c",
"\x49\xc8\x27\xcf\x48\xef\xb1\x22\xa9\xd6\xfd\x87\xb4\x26\x48\x2b\x74\x96\xcc\xd4\xa2\xdb\xca\x31\xeb\xbf\x6b\x2b\x80\xc9\x85\x30",
"\xf6\xd7\xfa\xdd\xc3\xa5\x68\x75\xa8\xd2\x4e\x47\x85\xa1\x39\x14\x1d\xd8\x92\x96\x8f\x70\xbf\x0e\x37\xd5\x05\xaf\x9a\x33\x24\xfd",
"\xb7\x8e\xb7\xf1\x2b\xa7\x18\x18\x33\x13\xcf\x33\x66\x55\x99\x67\x56\x41\x1b\x7d\xcc\x86\x48\x15\x7a\xaa\x4c\x89\x1c\xa9\xdb\xee",
"\x77\x1a\x8d\x05\xf1\xaf\x62\x14\xe0\xef\x08\x86\x66\x2b\xe5\x00\xee\x91\x0a\xb9\x9f\x01\x54\x22\x70\x67\xfd\xdc\xfe\x08\xa3\xdd",
"\xad\x23\xd7\x7a\x38\x65\x5a\xcb\x71\x21\x68\x24\xe3\x63\xdf\x8a\xc4\x1a\x48\xa1\xa0\x08\x0f\x35\xa0\xd2\x3a\xa1\x4b\x54\x46\x0b",
"\x85\x78\xbf\xf3\x6e\x3b\x02\xcc\x71\x49\x5b\x64\x7d\xb8\x8c\x67\xc3\xc5\xca\x71\x0b\x5a\x2b\xd5\x39\x14\x85\x50\x59\x5d\x03\x30",
"\xb0\xeb\x4d\x99\x9e\x4e\x0e\x7c\x2e\x33\xff\x08\x1e\x84\x7c\x87\xb4\x99\x40\xeb\x24\xa9\xe0\x79\x4c\x6a\xa9\x51\x68\x32\xc4\x27",
"\x2b\x12\x0d\xe8\x0a\x54\x62\xf8\x39\x5c\xfb\x71\x53\xc8\x6d\xfd\x44\xf2\x9f\x07\x76\xea\x15\x6e\xc4\xa3\x4f\xa6\x4e\x5c\x47\x97",
"\x1a\xaf\x4c\x1e\x3c\xb6\x77\x48\x57\xe2\xee\xf2\x7c\x17\xe6\x8d\xc1\xae\x57\x71\x12\xe4\x76\x96\x65\xf5\x16\xc2\xe8\xc4\xe2\x7b",
"\xce\x0a\x44\x30\xd0\x90\xba\x2f\x1b\x46\xab\xea\xae\x0c\xb5\xfd\x17\x6a\xc3\x9a\x23\x68\x88\xfa\x36\x3b\xf6\xf9\xfd\x60\x36\xd9",
"\x65\x51\x10\x64\x6b\xff\x89\x0c\x44\x8c\x09\x51\xe1\x11\x32\xdc\x35\x92\xbd\xa6\xe0\x80\x69\x63\x41\xb9\x30\xd0\x90\x22\x47\x23",
"\x00\x05\x47\x56\x0f\xea\x0d\xd4\xb4\x77\xeb\x28\xbf\x78\x1e\xa6\x7b\xf8\x3c\x74\x89\x45\xce\x89\x23\xf9\x0f\xdd\x14\xeb\x7a\x4b",
"\x0a\xaf\xa9\xf4\x7a\xcf\x69\xd4\x6c\x95\x42\x98\x59\x94\xff\x53\x21\xf0\x08\x42\xa2\x8d\xf2\x39\x6d\x4a\x30\x76\x77\x6a\x83\xcb",
"\x93\xb2\x66\xf3\x8c\x3c\x3e\xaa\xb4\x75\xd8\x15\x97\xab\xbd\x7c\xc0\x79\x43\x03\x50\x68\xbb\x6f\xd6\x70\xdb\xbe\x15\xde\x01\x31",
"\xf4\x61\x41\x4a\x25\x96\x55\x5c\xec\xe5\xcf\xee\x65\xa3\xc2\x26\x48\xdb\x00\x82\xca\x21\x1f\x62\x38\xaf\x82\x30\xe4\x1b\x32\x12",
"\x7f\x45\x55\xa9\x40\xce\x11\x56\xc9\xbc\xea\x9a\x2a\x0b\x80\x1f\x9a\x5e\x44\xec\x94\x00\xb6\x1b\x14\xa7\xb1\xa6\x40\x4f\xfd\xf6",
"\x7d\x89\x37\xc1\x8d\x6e\x11\xa0\x95\x2e\x53\x97\x0a\x09\x34\xcf\x0e\x65\x51\x56\x37\xac\x24\xd6\xca\x52\xcc\xf4\xb9\x3d\x38\x5f",
"\x42\xe1\x70\xa7\xab\x1d\x2c\x16\x0d\x60\xab\xfc\x90\x68\x72\xf9\xcf\xd0\xc2\xee\x16\x9e\xd7\x6f\x6a\xcb\x3f\x83\xb3\xee\xef\xdb",
"\x9c\x2f\x3e\x98\x11\xf7\xd0\xc7\x46\x3e\xaa\x1e\xe6\xf3\x9c\x23\xf9\x02\xf3\x79\x7b\x80\x89\x15\x90\xb4\x3b\xbe\x0f\xdf\x0e\x51",
"\x55\xfe\xe5\x4c\x0d\x0d\x87\x37\x24\x86\x4d\xc0\xb2\xa1\x0b\x38\xb7\xf4\x03\x00\xee\x9c\xae\x4d\x9b\xaa\xf8\xa2\x02\xc4\x04\x9a",
"\x0d\x30\xc6\xc4\xfa\x02\x16\xd0\x63\x7b\x40\x49\x14\x2b\xc2\x75\x81\x4f\xd6\x74\x85\x93\x73\xbd\x4a\xf5\x20\xce\x17\x3a\x1c\x75",
"\xc5\x05\x0a\x20\x17\x49\x0f\xff\x7a\xa5\x3c\x73\x75\x59\x82\xb3\x39\xdd\xb0\xfd\x7c\xef\x2c\xde\x32\xc8\x1b\xc9\x83\x43\x31\xc5",
"\x74\x9b\x0e\x8c\x8c\x8b\x7d\xda\x8c\x20\x63\xc7\x08\x04\x7c\xfe\x95\xaf\xa0\xa4\xd8\x68\x86\xb3\x1a\x12\xf3\x01\x83\x96\xe6\x7c",
"\x7e\x81\xbe\xae\x78\xe1\xdd\xbf\x6c\x15\x0e\x15\x66\x7e\x1f\x18\x78\x3f\x9b\x0a\xb7\xfb\xe5\x2c\x7a\xb6\x3e\x75\x41\x35\x94\x8d",
"\x66\x21\xfb\x2e\x76\x12\x37\xd2\xb0\x98\x63\xfd\x31\x95\x17\x89\x69\x7f\x11\x9d\x11\x8d\x2e\x5d\xb0\xe9\x57\xab\x01\x73\xf0\x6a",
"\x6e\x9e\x9e\x0b\x9a\x23\xde\xec\x5f\x28\xdc\x45\xf0\xbb\xe7\x42\x35\x65\xf0\x37\xf7\x4b\xe2\x95\x7e\x82\xe5\xf7\x2c\x88\x60\x94",
"\x96\x5d\x4f\x98\x1b\x54\x66\x9a\x96\xc5\xab\x02\xd0\x9b\xf0\xa9\x85\x0d\x13\x86\x24\x25\xb8\x98\x1f\x1a\x92\x71\x35\x0f\x28\xbb",
"\x0b\x2a\xd0\x59\x39\xb0\xaa\xbb\xdc\x01\x10\x82\xfa\xd7\x96\x0b\xaa\x0c\x45\x9e\xc1\x6a\x2b\x29\xf3\x7c\x1f\xa3\x17\x95\xa4\x6d",
"\x4e\x3e\xb5\xb9\xbc\xe2\xfd\x9f\x68\x78\xae\x36\x28\x82\x11\xf0\x99\x7f\x61\x49\xaa\x8c\x29\x0e\xd9\x12\x28\xba\x4c\xdf\xae\x80",
"\x5f\x6f\xec\x8f\x78\x90\xd0\x32\x46\x1b\x12\x73\x32\x75\x9c\x88\xa1\xb7\x36\x0a\xa1\x0c\x6b\xd3\x84\x82\x57\x2f\x59\xd2\xba\x8b",
"\x07\xb6\xd6\x9b\xaf\xcf\xd7\x67\xf1\xb6\x3a\x49\x0a\x88\x43\xc3\xbb\x1f\x8e\x1b\xbe\xa5\x61\x76\x10\x9b\x57\x43\xc8\xf7\xd3\x57",
"\x01\xaa\x27\x8b\x07\xb5\x8d\xc4\x6c\x84\xbd\x0b\x1b\x5c\x8e\x9e\xe4\xe6\x2e\xa0\xbf\x7a\x69\x58\x62\x44\x4a\xf3\x2e\x87\xf1\xfd",
"\x9f\x12\x29\xcd\x8d\xd9\x09\x2c\x27\xa0\x1f\x5d\x56\xe3\xc0\xd5\x9c\x2b\xb9\xf0\x13\x9a\xbf\x04\x2e\x56\xf3\x43\x63\x7f\xda\x33",
"\x7c\xc9\xba\x2d\xf7\xb9\xea\x6b\xb1\x7e\xe3\x42\x89\x8e\xdd\x7f\x54\x70\x3b\x93\xb6\xde\xd6\xa8\x19\xe8\x3a\x7e\xe9\xf9\x38\xb4",
"\x64\xf9\xe6\x64\xbc\x6d\x4b\x8f\x5f\x68\x61\x6d\xd5\x0a\xe8\x19\xc3\xe6\x04\x52\xef\xd5\xe5\x89\xd6\x60\x4b\x93\x56\x84\x1b\x57",
"\x04\xa8\x5e\x35\x95\x25\xd6\x62\x33\x8c\xae\x86\xc1\xe5\x9b\x1d\x7a\xa9\xbd\x12\xb9\x20\xe8\x06\x75\x03\x72\x3d\xc1\xe0\x31\x62",
"\x5b\xc3\x99\x46\x12\x62\x4d\xa1\x68\x75\x04\x55\xb3\x63\xf2\x96\x4e\x18\x61\xdb\xa4\xf1\xc3\x05\xdf\x01\xb9\x70\xac\x02\xa7\xae",
"\x36\x50\x59\x21\xaf\x5a\x09\x17\x53\x95\xeb\xae\xa2\x9c\x72\xb2\xa6\x9a\x3a\x92\x04\x38\x4a\x76\x7a\x5b\xe8\xa7\x21\xf3\x1b\x10",
"\x7a\x7e\x8d\xf7\x17\x33\x87\xae\xc5\x93\xe4\xfe\x2b\x45\x52\x0e\xa3\x15\x6c\x5f\x81\x0d\x2b\xb1\xb2\x78\x4e\xfd\x1c\x92\x23\x76",
"\x3e\x9b\x62\xd2\xea\x2b\xe5\x0a\x2d\xa6\x70\x74\x6c\x4d\xbe\x80\x7d\xb9\x60\x19\x80\xaf\x3a\x10\x14\xbc\xd7\x2d\x02\x48\xd8\x4c",
"\xcb\x57\xf3\xa7\xfe\x9e\x1f\x8e\x63\x33\x2c\x56\x3b\x0a\x31\x9b\x26\xc9\x44\xbe\x83\x9e\xab\xc0\x3e\x9a\x32\x77\x75\x6b\xa6\x12",
"\x82\x3d\xa8\x94\xb2\xc7\x3f\xfc\xd3\x9e\x77\x36\x6b\x6f\x1a\xbf\x0a\xe9\x60\x4d\x9b\x20\x14\x0a\x54\xe6\xd5\x50\x53\xaa\xde\xba",
"\xf7\x44\xab\xb9\x9c\x97\xd9\x8e\x4c\xd0\x80\x72\xa8\x97\x10\x78\x29\xd6\xd8\x48\x1a\xee\x96\xc2\x24\x43\xf6\x26\xd0\x0f\x41\x45",
"\xa2\x35\x30\x30\xd4\xea\x3a\xd9\xe8\x74\xa0\xf7\xff\x35\xbb\xfa\x10\x56\x2c\x98\xc9\x49\xd8\x8c\xab\xab\x27\x10\x2b\xbb\x8e\x48",
"\x07\x4a\xe4\x77\xc8\xc7\xae\x76\xc6\xf2\xb0\xbf\x77\xac\x17\x93\x5a\x8e\x8e\xe5\x1b\x52\x15\x5d\x28\x21\xd9\x3a\xb3\x0f\x37\x61",
"\x6d\xe8\x4c\xaa\x2c\xa1\x86\x73\xe0\x1b\x91\xaf\x58\x22\x0c\x60\xae\xcd\x5c\xcc\xf2\x69\x72\x5e\xc3\xc7\xf2\x26\xb2\x16\x74\x92",
"\xa3\xe5\x07\xe7\x13\xf1\x19\x01\x01\x7f\xc3\x28\x18\x6a\xe9\x8e\x23\xde\x7c\xea\x55\x94\x68\x74\x80\x22\x9f\x77\xd4\x58\x48\xd8",
"\x47\x44\xdf\x6a\xc0\x2f\xf0\xa3\xf9\xad\x0b\xf4\x7b\x15\x85\x4b\xbe\xbb\x73\xc9\x36\xdd\x02\xf7\xc7\x92\x93\xa2\x82\x84\x06\xf6",
"\xd2\x59\x04\xfb\xf9\x07\xe1\x9f\x36\x6d\x54\x96\x2f\xf5\x43\xd9\xf5\x3b\x8f\xdf\xd2\x41\x6c\x8b\x97\x96\xb6\xa8\xdd\x43\x0e\x26",
"\x0c\x51\x2b\x61\x5e\xac\x37\x4d\x4d\x49\x4e\x3c\x36\x83\x8d\x8e\x78\x8b\x3d\xc2\x69\x1b\xf2\x79\x16\xf7\xf4\x26\x94\xb1\x44\x67",
"\xd8\x4e\x3e\x25\x0a\x86\x22\x7c\x64\xa9\x6f\x6d\x5a\xc2\xb4\x47\x67\x4b\xa9\x3d\x39\x91\x60\x85\x0a\xcb\x23\x39\xda\x43\xea\xe5",
"\x19\xdb\xa6\x9b\x48\xb0\x85\xd9\x48\x7c\xc2\x3a\x41\x35\xf3\xef\x48\x49\xc1\x81\x96\x5b\xff\xc5\x5b\xae\xd9\xfa\x6c\x20\x54\x29",
"\x9b\xb0\x97\x52\xcf\x3a\x46\x44\x55\x42\x29\x09\xed\xef\x51\x8a\xc1\x8f\xe6\x3c\xf5\xe1\xe8\xd9\xd6\xc2\xe6\x8d\xb6\x2e\x0c\x87",
"\x0a\xbc\xa9\x25\x12\xfc\x98\xfe\x6c\x2e\x7d\x0a\x33\x93\x56\x86\xfc\x3a\xcb\xd0\xa4\xc6\x8b\x51\xf4\xa7\x0e\xce\x82\x8c\x06\x64",
"\xe1\x98\x0c\x65\x92\xe6\xd2\xd9\x2c\x1a\x65\xac\xad\x8f\x10\x71\xb6\xa4\x04\x09\x7b\xb6\xfc\xce\x49\x4f\x3c\x8a\xc3\x13\x85\xcf",
"\x58\xc0\x71\xcf\xe7\x2e\x9e\xe8\x67\xbb\xa8\x5c\xbd\x0a\xbe\x72\xeb\x22\x3d\x27\x97\x8d\x6f\x06\x50\xd0\x10\x35\x53\x83\x9b\x59",
"\x6b\x83\x0e\xa0\xdb\x65\x46\xa0\x44\xc9\x90\x0d\x3f\x33\x5e\x78\x20\xc2\xa8\x0e\x14\x7b\x07\x51\x64\x18\x99\xd1\xa5\xaa\x8f\x74",
"\xc9\xcf\x1d\x62\x70\x78\xf6\x3a\x36\xbb\xde\x36\x4c\xd0\xd5\xf2\xbe\x17\x14\x12\x4d\x18\x6c\x06\xdb\x5b\xcd\xf5\x49\xa1\x09\xf8",
"\x1b\xeb\x15\xc9\x0d\xcf\x7a\x52\x34\xed\x07\x78\x33\xa0\xa3\xe9\x00\x96\x9b\x60\xbe\x1d\x04\xfc\xeb\xce\x0a\x9f\x89\x94\xbd\xbb",
"\xea\x0b\x9e\xec\xf4\xad\x5e\xc8\xc1\x4a\xec\x13\xde\x7d\x66\x1e\x76\x15\x01\x8b\x1a\x3c\x65\x46\x4b\xf5\xec\xa9\xbb\xf6\xde\xd3",
"\x0d\xe4\x24\x7e\x72\xd3\x78\x71\x3b\xcf\x22\xd5\xc5\xd3\x87\x4d\x07\x92\x03\xbb\x43\x64\xe2\x5f\x67\xa9\x0d\x55\x70\xbd\xcc\xe8",
"\xd7\xc8\x1b\x0f\x3c\x14\x84\x4f\x64\x24\xe8\xbd\xd3\x1a\x12\x8e\x77\x3c\xb9\x6c\xcc\xef\x6d\x05\xcb\xff\x47\x3f\x0c\xcb\x9f\x9c",
"\x93\x68\xe5\x1e\xc9\x8e\x2a\xd2\x08\x93\xa5\xfc\x21\xe6\xa8\xb2\x0c\x5b\xee\x15\x8d\x5c\x49\xca\x58\x64\x9c\xff\x84\xdb\x9d\x68",
"\xed\xe9\xa3\x85\x8a\x12\xd5\xdd\xea\x21\xa3\x10\xe5\x72\x1b\xf8\x6c\x22\x48\x53\x9f\x42\xc9\xe0\xc3\xc2\x9a\xe5\xb0\x14\x8b\xa5",
"\xda\x6c\xa1\xfb\x53\x9f\x82\x5c\xa0\xf0\x12\xed\x69\x76\xba\xf5\x7e\xf9\xc7\x01\x43\xb7\xa1\xe8\x8b\x46\x50\xbf\x7a\x92\x5e\x24",
"\x1d\x03\x97\xc2\x63\xd5\x1e\x9f\xc9\x5b\xcc\x8b\xaf\x98\xd1\xa8\x53\xe1\xc0\x40\x1c\xd0\xe2\x7c\x7b\xf5\xda\x3f\xba\x1c\x93\xa8",
"\x6f\x55\xc1\x48\xbb\x27\xc1\x44\x08\xcf\x0f\x16\xf3\x44\xab\xcd\x63\x53\x91\x74\xac\x85\x5e\x51\x0a\x42\xd7\x8c\xfa\xec\x45\x1c",
"\x1e\x94\xd4\xe6\xd9\x03\xe9\x8f\x60\xc2\x40\xdc\x84\x1d\xca\xce\x5f\x9e\x8b\xbb\x08\x02\xe6\x64\x8a\x49\xab\x80\xc2\x33\x18\xcb",
"\x18\xde\xed\x37\xf6\x0b\x6a\xa8\x63\x4d\xda\x25\x65\xa0\x48\x54\x52\x48\x7d\x7b\xce\x88\xaf\xb4\x93\x01\xa7\x35\x2d\xb4\xe5\x06",
"\x06\x5a\x34\xb7\x86\xb0\xcc\xf6\xf8\x8c\x13\x64\x08\x94\x3c\x3d\x2b\xd3\xda\x14\x35\x7e\xe1\xe5\x5e\x81\xe0\x5d\x67\xa4\xc9\xbc",
"\xe2\xec\x3b\x2a\x93\xc4\x73\xd8\x8b\xfd\xf2\xde\xb1\x96\x9d\x15\xab\x61\x73\x7a\xcc\x1e\xe8\xe0\x82\x34\xbc\x55\x13\xee\x87\xea",
"\xbe\xa8\xc6\x72\x8d\x57\xd4\xb0\x75\xf3\x72\xac\x82\xb8\x13\x4a\xc8\x04\x4f\xe1\x3f\x53\x36\x96\xa5\x8e\x88\x64\xfa\x3e\xfe\xe3",
"\x9a\x67\x62\x6f\xb4\x68\xd3\xf1\x14\xc2\x3a\xc7\x3f\xd8\x05\x7f\x43\xd0\x63\x93\xd3\xec\xa0\x4d\xa1\xd6\x67\x6f\x89\xda\x2d\x40",
"\x78\x82\x7f\xa0\x0e\xa4\x8d\x96\xac\x9a\xf8\xd1\xc1\xe3\x17\xd0\x2c\xe1\x17\x93\xe7\xf7\xf6\xe4\xc7\xaa\xc7\xb5\xd7\xdd\x49\x0f",
"\x0d\x13\x3c\xed\x66\x6c\x79\x8e\xa6\x3b\x6d\x80\x26\xec\x50\x7d\x42\x9e\x83\x4d\xaa\x7c\x74\xe4\xe0\x91\xe4\x62\xe5\x81\x51\x80",
"\x9d\x53\x06\x42\xae\xb6\x52\x46\x91\xd0\x6b\x9e\x02\xa8\x4e\x34\x87\xc9\xcd\xd8\x6c\x26\x4b\x10\x50\x35\xd9\x25\xc9\x84\x82\x3a",
"\xf7\xd7\x2d\x22\xcd\x4a\xd3\xe4\x4f\xd6\x17\xbd\xb4\xc9\x0b\x9a\x88\x4f\x4e\xb0\x45\x68\x8c\x0e\x3f\xb6\x4d\xd3\x3e\x03\x3e\xaa",
"\xbf\xc2\xef\x3b\x40\x42\x94\xfe\x2f\xa0\x5a\x8b\x71\xc7\xf7\x86\xb5\x85\x19\x17\x5b\x72\x02\xa6\x9f\xe3\x0f\x45\xe6\x07\xff\x1c",
"\xb5\x83\x41\x4f\xce\xe2\x80\x12\x87\x88\xf7\xb3\x94\x51\xc5\x11\x37\x6f\xe8\x21\xf4\x55\xd4\xf3\x70\x27\x95\xe9\x6d\x56\x07\x04",
"\x93\xd8\x73\xcd\xf2\x3d\x5e\xdc\x62\x2b\x74\xf9\x54\x4c\xac\x7f\xe2\x47\xd7\xa6\x8e\x1e\x2a\x7b\xf2\x87\x9f\xad\x97\xa3\xae\x63",
"\x01\x81\xd6\x05\x06\xb1\xf3\x60\x92\x17\x48\x7c\x2c\x73\x76\x21\xd6\x37\xe1\x23\x2f\x24\x3f\x68\xc6\x62\xd0\x45\xf4\x4d\x48\x73",
"\xf4\x04\x35\x48\x83\x89\xb4\xfb\x3b\x94\x5c\xa2\x1a\x83\x25\xa5\x1e\x1b\x5f\x80\xf0\x45\xab\x01\x97\x48\xd0\xec\x66\x05\x6a\x8b",
"\x03\x5b\x96\xff\x8b\x85\xd3\x12\xbe\x0f\x9d\xf6\x27\x17\x14\x39\x2a\x80\x2e\xc8\xba\xb5\x9a\xe8\x22\x98\x12\xdd\xc6\x7c\xed\x5a",
"\x87\x56\x5f\xf0\x8a\x93\xa8\xff\x41\xea\x93\x2b\xf5\x5d\xec\x8e\x0c\x7e\x79\xab\xa0\x36\x50\x7e\xa4\x5d\xf9\xd8\x1c\xb3\x61\x05",
"\x88\x84\x91\x19\x6b\xd8\xff\x52\x8b\x77\x3a\x3e\x45\x3e\xae\x49\x06\x3a\xd3\x1f\xb4\xca\x0f\x9f\x2e\x43\x3f\x8d\x35\x44\x54\x40",
"\xdd\x4f\xed\xd5\x66\x21\x22\xcb\xfe\x04\x6a\x12\xe2\x13\x72\x94\xef\x1c\xb7\x82\x22\x38\xd9\xe2\x4e\xac\xc7\x8f\x22\xf8\xe9\x3d",
"\xc7\xd4\x94\x3d\xda\xc3\x4e\x1a\x38\x69\x2c\x62\x4d\x79\x9e\x63\x4a\xd4\xc4\xe3\xae\x7e\x3b\xb2\xae\x4c\xf0\xd8\xeb\x89\x85\xbc",
"\xfa\xfa\x1b\xb3\x6f\x0a\xc3\x4b\x76\x2a\x10\xe9\xf3\x27\xdc\xab\x21\x52\xa6\xd0\xb1\x6a\x19\x69\x73\x62\xd4\x9a\x31\xe7\xf5\x66",
"\x14\x6d\x77\xe8\x0c\xa7\x0e\xa5\xcb\x17\xbf\xc9\xa5\xce\xa9\x23\x34\xf8\x09\xcb\xdc\x87\xa5\x1c\x2d\x10\xb8\x57\x9a\x4b\x9c\x88",
"\x95\x0a\x4c\x0c\x77\x20\x21\xce\xe2\x60\x11\xa9\x21\x94\xf0\xe5\x8d\x61\x58\x8f\x77\xf2\x87\x3a\xa0\x59\x9d\xff\x52\xa1\x60\xc9",
"\x3f\x20\xac\x5d\xac\x91\x71\x85\x7f\xc5\x79\x18\x65\x45\x8f\xdb\x6e\xac\x4f\xab\x83\x7d\x7e\xab\xc4\x2c\xb0\xa8\x3c\xb5\x22\xfc",
"\xee\xa5\x31\x03\xe7\xa5\xa5\x5d\xc1\xdf\x79\x79\x73\x95\xa2\xa3\xe9\x61\x23\xeb\xd7\x1c\xdd\x2d\xb4\xb1\xbe\x80\xe7\xb3\xf0\x2b",
"\xb0\x3f\x26\x00\x9d\xe2\xe8\xea\xbf\xcf\x61\x52\xf4\x9b\x02\xa5\x5c\x5e\x5d\x0f\x73\xe0\x1d\x48\xf5\xa7\x45\xf9\x3c\xe9\x3a\x29",
"\x5c\x04\xc2\x74\xa7\x08\xc9\xa7\xd9\x93\xe3\x3b\xe3\xea\x9e\x61\x19\xdc\x29\x52\x7a\x76\x74\x10\xdb\xaf\x93\x99\x6f\x87\x36\x9a",
"\x82\xb0\xe1\xd7\xa2\x7b\x67\xf0\xe6\xdc\x39\xdc\x41\xe8\x80\xbd\xae\xf5\xd1\xf6\x9f\xce\xc3\x8e\x08\xda\x2e\xd7\x8e\x80\x5e\xf9",
"\x57\x5e\x58\xb6\x2a\xfa\xb0\x94\xc2\x0c\x29\x66\x04\xdc\x3b\x7d\xd2\xe1\xa5\x0f\x59\x78\xd8\xee\x24\xb7\xdc\xa0\x28\xe9\x73\x16",
"\xb9\xda\xd0\x13\x1c\x51\xe2\x64\x5e\x76\x1b\x74\xa7\x1e\xba\xd2\xbf\x17\x56\x45\xfa\x9f\x42\xa4\xab\x0e\x69\x21\xb8\x33\x06\xe3",
"\x98\x33\x10\xcd\xce\x83\x97\xc0\x16\xbf\xcf\xcc\x9c\x3a\x8a\xbb\xb5\xc9\x28\xb2\x35\xbc\x3c\x3a\xe3\xa3\xcc\x10\xef\x24\xdf\xbd",
"\x91\xaf\xa3\xde\x4b\x70\xee\x26\xa4\xbe\x68\x58\x7d\x58\xb1\x54\xc7\xb3\x2b\x50\xb5\x04\xff\x0d\xc0\xba\xbc\x4e\xb5\x65\x78\xf4",
"\x58\xa7\x4d\xce\xb2\x02\x2c\xd8\xa3\x58\xb9\x2a\xcd\x1b\x48\xa5\xe0\x1c\x52\x4c\x3b\x01\x95\xd7\x03\x3e\x4b\xd5\x5e\xff\x44\x95",
"\x42\x85\x1a\x01\x46\x9b\xa9\x7c\xdc\x38\x93\x9b\x10\xcf\x9e\xa1\x32\x37\xaa\x1f\x6c\x37\xb1\xac\x84\x90\x4c\x5a\x12\xa8\x1f\xa0",
"\x17\x94\x28\x65\x68\x0b\xd3\xd6\xe6\x63\x3c\x90\xcc\x4b\xd6\x92\xae\x09\x51\xa8\x58\x9d\xbe\x10\x3c\x1e\x29\x3b\x30\x67\x34\x4d",
"\x19\x63\xd5\xa0\xe5\x12\xb7\x23\x53\x95\x3a\xad\xbe\x69\x4f\x73\xa9\xa5\x76\xf0\x24\x1a\x98\x83\x78\xfa\x40\xbf\x57\x4e\xda\x52",
"\xcf\x16\xa2\x21\x8f\xc8\xa3\xb6\xfa\x5a\xa4\xa0\xbc\x62\x05\x79\x27\x98\x07\x8c\x38\x0c\xcc\x7e\x50\x41\x47\x6e\x0f\x1b\xc5\x3d",
"\x7e\xc9\x3f\x34\xeb\x32\x38\x23\xeb\x19\x9f\xbf\x8d\x06\x21\x90\x86\xd5\x17\xd0\xe8\xf4\xb9\xe3\x48\xd7\xaf\xd4\x1e\xc9\xfd\x5d",
"\x26\x95\x39\x0a\x8a\x74\x48\x39\x0f\xe3\x83\xbe\xb1\xee\xe0\x6d\x58\x22\x02\x68\x3f\x02\x73\xd6\xe7\x2e\xf3\x9a\x8c\xf7\x09\xe1",
"\x0d\x37\x90\xaf\x5f\x8e\x5c\x94\x54\x10\x92\x9e\x31\xd0\x61\x44\xa4\x71\xac\x82\xf8\x28\xaf\xe8\x9a\x47\x58\xa5\xbb\xeb\x7f\x9f",
"\xea\x85\xbb\xe6\x3d\x6f\x66\xf7\xef\xee\x70\x07\xe7\x70\xaf\x82\x0d\x57\xf9\x14\xc7\xf1\x79\xc5\xfe\xe3\xef\x28\x45\xf1\x9c\x41",
"\x01\xe0\x24\xcb\x14\xb3\x4b\x6d\x52\x5c\x64\x2a\x71\x0b\xfa\x14\x49\x7e\xa2\x0f\xd2\x87\xc3\x9b\xa4\x04\xb1\x0a\x8b\x14\x3e\xce",
"\x23\xba\x19\x35\x2b\x1e\x71\xa9\x65\x26\x0b\xf4\xd5\x12\x0f\x02\x00\x70\x9e\xe8\x65\x7e\xd3\x81\x04\x3b\xec\x9a\x93\x8a\x1a\xde",
"\x36\x87\x55\x62\xe7\x47\x13\x63\x13\xec\x5d\xb5\x81\x74\xe5\xfa\xb8\x70\x99\x7a\x05\x4c\xa8\xd3\x98\x7d\x18\x15\x99\xc7\xdb\x6a",
"\x18\x77\x66\x82\xfc\xc0\xc6\x86\x31\x47\x14\x37\x59\xa8\xd4\x05\x0a\x41\x15\xa8\xed\xe0\x13\x6e\x49\xa7\xcf\x88\x5c\x8a\x48\x05",
"\x16\x76\x82\x03\xa4\x71\xa1\x9e\xbb\x54\x1c\x94\x2f\x45\x71\x6e\x9f\x43\x29\x85\xab\xbf\xbe\x6b\x4b\x7d\x61\xa7\x98\xce\xa3\x54",
"\x6c\x71\x20\xe4\x0f\xc8\x50\xe4\x71\x50\x58\xb2\x33\xf5\xad\x45\x27\xd1\x08\x4a\x90\x91\x14\xfd\x6a\x36\xb7\xb7\x57\x3c\x4a\x44",
"\x4e\xc7\xaf\x30\x9a\x93\x59\xc3\x32\xd3\x00\x86\x16\x55\xfa\xec\xeb\x68\xbb\x1c\xd8\x36\xdd\x66\xd1\x0d\xd4\xfa\xc9\xc0\x1a\x28",
"\x15\xc5\x3e\xb3\xa0\xea\x44\xbb\xd2\x90\x1a\x45\xa6\xeb\xea\xe2\x9b\xb1\x23\xf9\xc1\x11\x5c\x38\xdf\xb2\xcd\xbe\xc0\x64\x22\x29",
"\x3f\x2f\xda\x9a\x7a\x9c\x57\xb7\x13\x86\x87\xbb\xce\x49\xa2\xe1\x56\xd6\x09\x5d\xdd\xab\xb3\x45\x4e\xa0\x97\x37\xe0\x2c\x3f\xa5",
"\x04\x40\xef\x40\xc4\x6f\xdd\x2b\x5d\x86\xe7\xfe\xef\x85\x77\xa8\x59\x1d\xe8\x62\xcf\xd7\x92\x8c\xdb\xcc\x8f\x47\xb8\xfa\x3f\xfc",
"\x3d\x23\xbd\xba\xf9\x90\x52\x59\xd8\x58\xdf\x5b\xf9\x91\xeb\x23\xd2\xdc\x9f\x4e\xcd\xa7\xf9\xf7\x78\x39\x69\x1a\xce\xf1\xb8\xc4",
"\x44\x29\xf3\x2d\xb1\xcc\x70\x56\x79\x19\xd7\xd4\x7b\x84\x4a\x91\xcf\x13\x29\xa6\xcd\x11\x6f\x58\x23\x05\xf3\xb7\xb6\x0c\xd6\x0b",
"\xcb\xb8\x23\x9a\x76\x5b\xf5\xb2\xc1\xb6\xa5\xc8\x83\x2d\x2c\xab\x8f\xef\x5d\xea\xca\xdf\xb6\x5d\x8e\xd4\x3e\xf5\x6d\x29\x1a\xb6",
"\xa8\x99\xb6\x59\xb0\x8f\xba\xe3\x0b\x18\x24\x43\xbe\x8f\xfb\x6a\x64\x71\xc1\xd0\x49\x7b\x52\x29\x30\x61\x75\x48\x86\xa9\x37\xa3",
"\xf9\x29\xbe\xad\x59\xe9\x42\x4a\xb9\x04\x27\xb3\x79\xdc\xdd\x63\xfb\xfe\x0c\x4f\xb5\xe1\x79\x2e\x3a\x16\x85\x54\x1c\xd5\xec\x65",
"\x2b\xbc\x6b\x9d\xd5\xe6\xd0\x32\x72\x50\xb3\x23\x05\xbe\x20\xc8\x9b\x19\xb5\x6d\x33\xa0\x96\x52\x2e\xe3\x3f\x22\xd8\xc8\x2f\xf1",
"\xb2\x24\x7e\x68\x38\x6c\x1b\xdf\xd4\x86\x87\x10\x5c\x37\x28\xeb\xba\xd6\x72\xda\xff\xa9\x1b\x57\x84\x5b\x4e\x49\x69\x3f\xfd\x71",
"\x60\x3c\xcc\x97\xa1\x98\xb0\x04\xf9\xfa\x56\xde\xed\x22\x95\xd1\xb2\xd4\x2e\xf0\x1f\x22\xd8\x0a\x00\xcb\x28\xbc\xf1\xb8\x56\x46",
"\x06\xbd\xa5\xa1\x59\x4f\x71\x21\xac\xd2\xef\xe3\x8c\xcb\x61\x7f\xbc\x07\x8b\xb9\xa7\x0b\x66\x5a\x5f\x5e\xfd\x70\xe3\x01\x3f\x50",
"\x05\x84\x52\x0b\x4b\x3b\xda\xd1\xd1\x77\x32\x9b\xd9\x95\x2c\x05\x89\xb2\xa9\x9e\xb9\x67\x6c\xb3\x24\xd1\xfc\xe4\x6d\xad\x0b\x9a",
"\x5f\x5e\x5f\x1c\x93\xd9\x61\x98\x56\x24\x76\x8b\x7c\x67\x6d\x48\x8c\x7c\x7c\x1d\x4c\x04\x3f\x6f\xc1\xea\x19\x04\xfe\xfb\x75\xbe",
"\x1e\x24\xc4\x5c\xe2\x67\x2e\xe4\x03\xdb\x34\x07\x7c\x88\xe8\xb7\xd7\x79\x7d\x11\x3c\x6f\xd1\x61\x90\x6d\xce\x37\x84\xda\x62\x7d",
"\x3c\x95\xeb\xf3\xf1\xa8\x7f\x67\xd2\x86\x1d\xbd\x1c\x85\xdc\x26\xc1\x18\x61\x0a\xf0\xc9\xfb\xf4\x18\x04\x28\xe6\x53\xac\x3e\x50",
"\x0b\x20\x58\x38\xa8\x27\x1d\xae\xa8\x96\x56\xb1\xec\x7c\x5b\xb7\x24\x4c\x42\xa8\xb8\x00\x0d\x76\x97\xe9\x20\x95\xda\x6b\x9b\x94",
"\x84\xdf\x20\xb1\xd9\xd8\x7e\x30\x5c\x92\xe5\xff\xae\x21\xb1\x0b\x32\x56\x09\xd5\x9d\x83\x5a\x95\x4d\xbd\x87\x50\xef\x5d\xab\xf4",
"\x59\x62\x6c\xac\x38\x0d\x8f\xe0\xb8\x0a\x6d\x4c\x44\x06\xd6\x2b\xa0\x68\x3a\x2f\x0f\x68\xd5\x0a\xd5\x06\xca\x1b\x1c\xf2\x53\x47",
"\x3d\x05\x5b\xe2\x67\x1e\x13\x6c\x93\x7f\x36\x1c\xef\x90\x5e\x29\x5d\xdb\x69\x83\x52\x63\x41\xf1\xd5\xf8\x0a\x16\xb7\x65\x5b\x40",
"\x50\x96\x28\xb6\xd1\x6d\x24\x28\x03\x13\x11\xd7\xbd\x2a\xdd\x8d\x5f\x51\x60\xe9\xec\xc0\xcd\x90\x9f\x1e\x82\xbb\xbb\x32\x34\xd6",
"\x76\x66\x0e\x91\xf1\xff\x3c\xb8\x96\x30\xdf\x5a\xf4\xfe\x09\xde\x60\x98\xd0\x9b\xaa\x66\xb1\xa1\x30\xc8\x9c\x3c\x5e\xdd\x5b\x22",
"\x0b\x57\x56\x9a\xaa\x0f\x47\x89\xd9\x64\x2d\xd2\x18\x9b\x0a\x82\x46\x6b\x80\xad\x32\xff\x35\xf8\x81\x27\x21\x0e\xd1\x05\xfe\x57",
"\xb1\x75\x07\xa3\x24\x60\x20\xfa\x00\x52\xa1\x72\x48\x5d\x7b\x35\x67\xe0\x16\x17\x47\x92\x7f\x2e\xdf\x27\xc4\x0e\x31\x08\x52\xe0",
"\x09\x04\x3c\x51\x71\x9d\x4b\xf6\x40\x5c\x9a\x7a\x29\x2b\xb9\xbb\x3b\xcc\x78\x2f\x63\x9b\x70\x8d\xdc\xc4\xee\xdb\x5e\x5c\x9c\xe9",
"\x9a\x91\xd6\xe8\x3b\x8f\xde\xc5\x36\x58\x0f\x66\x17\xf1\x0d\xfc\x64\xee\xdf\x14\xea\xd2\x9a\x6a\x64\x4e\xb1\x54\x42\x66\x22\xba",
"\xa5\xa4\xa3\xc3\xd3\xd5\xa7\x9f\x3e\xd7\x03\xfc\x56\xd4\x50\x11\xc2\x1f\x99\x13\x00\x1f\xcb\xcc\x43\xa3\xf7\x57\x2c\xff\x44\xec",
"\x2a\xa1\xb0\x8f\x47\xfb\xb1\xe2\xbd\x2e\x4a\x49\x2f\x5d\x61\x69\x68\xe7\x03\xe1\x35\x9a\x92\x1f\x62\xb3\x8b\x8e\x46\x62\xf0\xc4",
"\x7a\x2c\xd1\xdc\x11\x0d\x01\x41\x65\xc0\x01\xce\x65\x57\x8d\xa0\xc0\xc8\xd7\xd4\x1c\xc1\xfa\x44\xf9\x74\xe8\xa8\x22\x96\xfc\x25",
"\x01\xe0\x24\xcb\x14\xb3\x4b\x6d\x52\x5c\x64\x2a\x71\x0b\xfa\x14\x49\x7e\xa2\x0f\xd2\x87\xc3\x9b\xa4\x04\xb1\x0a\x8b\x14\x3e\xce",
"\x08\xeb\x2d\x2a\xa2\x5c\x5f\x0a\xf4\xe7\x2a\x7e\x01\x26\x73\x55\x36\xf6\xc2\xc0\x5e\x9c\x74\x37\x28\x21\x71\xaf\xe5\xe3\x22\xc6",
"\xaf\xdd\x66\x56\x2d\xea\x51\x00\x1c\x3a\x9d\xe3\x00\xf9\x1f\xc3\xeb\x96\x5d\x68\x48\xdf\xce\x92\xcc\xb9\xb7\x58\x53\xe0\x25\x08",
"\x36\x2c\x4f\x3d\xad\xc9\xc3\x93\x68\x26\x64\xa1\x39\xd6\x5d\x80\xe3\x2c\xaa\x2a\x97\xb6\xe0\x36\x1d\xfd\x71\x3a\x73\x26\x7e\xcc",
"\x2b\x18\x69\x26\xed\x81\x5d\x87\xea\xf7\x27\x59\xa6\x90\x95\xa1\x12\x74\xf5\xd1\x3c\x33\xb8\xcc\x2b\x87\x00\xa1\xf0\x20\xbe\x1d",
"\x60\xc6\xf4\xf3\x4c\x73\x19\xcb\x3f\x9c\xa6\x82\xe5\x9d\x92\x71\x1a\x05\xa2\x68\x8b\xad\xba\xe4\x89\x1b\x13\x03\xcd\x38\x48\x13",
"\x20\x8e\xa3\x87\x34\x97\x9a\xa2\xc8\x63\x32\xeb\xa1\xea\x52\x69\x99\x92\x27\x07\x7f\xf1\x10\xac\x0a\x0d\x41\x10\x73\x16\x5f\x85",
"\x23\xe8\x9f\xd3\x0a\x1c\x7d\xb3\x7f\x3e\xa8\x1b\x77\x9c\xe9\xac\xf8\xa4\x29\x43\x97\xcb\xb5\x4c\xff\x35\x0d\x54\xaf\xcf\xd9\x31",
"\x3a\xc5\xe0\x16\x89\xa3\xd7\x45\xe6\x09\x25\xbc\x7f\xac\xa8\xd4\x30\x6a\xe6\x93\xe8\x03\xb5\xe1\x9c\x94\x90\x6d\xc3\x0a\xdd\x46",
"\x8d\x9a\x23\x63\xb7\x57\xd3\xf1\x27\xb9\xc6\xed\x8f\x7b\x8b\x01\x8e\x65\x23\x69\xbc\x07\x0a\xa3\x50\x0b\x3a\x97\x8f\xea\xa6\xce",
"\x70\x80\x16\xfb\xe2\x2c\x81\x3a\x25\x10\x98\xf8\xf9\x92\xb1\x77\xb4\x76\xbd\x1b\xbc\x48\xc2\xed\x4a\x12\x2f\xf7\x49\x10\xa9\x65",
"\xcf\xab\x93\x88\x5e\x51\x29\xa8\x6d\x13\xfd\x38\x0d\x01\x0c\xc8\xc2\x04\x42\x99\x73\xb7\x76\xab\x1b\x47\x2d\x84\xa7\x67\x93\x0f",
"\xbe\xd4\x28\x5d\x0f\x8d\x18\xf1\x7d\xda\xa5\x3a\x98\xa4\x75\xc8\x7c\x04\xc4\xd1\x67\x49\x9e\x24\xc7\x70\xda\x78\x8e\x5d\x45\xf4",
"\xf0\x47\x4e\x76\xcf\xd3\x6e\x37\xe3\x2c\xfe\x5c\x0a\x9e\x05\xdd\xee\x17\xdd\x50\x14\xd7\xaa\x88\x17\xea\x36\x34\xa3\x54\x0a\x3f",
"\x25\x83\x59\xa7\xfa\x3d\x97\x56\x20\xc9\x81\x0d\xab\x3a\x64\x93\x97\x28\x76\xa0\x24\x13\x5f\xea\xf3\xac\x84\x82\x17\x9b\x2e\x79",
"\x07\x0f\xf6\x02\xcc\xca\xae\xf9\xe2\xb0\x94\xe0\x39\x83\xfd\x7f\x1b\xf0\xc0\x32\x66\x12\xeb\x76\x59\x3e\xab\xbf\x1b\xda\x91\x03",
"\x7a\x1f\xeb\x86\x49\xa5\xc0\x67\x9e\x10\x73\xe6\xd8\xa0\x2c\x8a\x6e\xbc\x58\x25\xf0\x29\x99\xf1\x6c\x94\x59\x28\x4f\x1b\x19\x8b",
"\x33\xc6\xc6\x22\x46\x4f\x80\xa8\xd8\x01\x7a\x03\xff\x3a\xa1\x96\x84\x0d\xa8\xbb\x03\xbf\xb5\x21\x2b\x51\x61\x2b\x5c\xf9\x53\xdc",
"\x75\x1e\x93\x76\xcb\x7c\xb9\xde\x63\xe1\x80\x8d\x43\x57\x9d\x78\x7d\x3f\x6d\x65\x91\x73\x03\x8f\xe4\x4a\x2d\x7f\xdb\x4f\xd1\x7e",
"\x31\x43\x84\xb4\x06\x26\x80\x0b\x1c\xde\x6f\xbc\x51\xeb\xc7\xd1\x3e\x91\x39\x8b\xe2\x68\x8c\x2a\x58\x35\x4a\xa0\x8d\x00\xb0\x73",
"\xd8\xfc\x8e\x3a\x13\x48\x39\x3c\x5d\x7c\x3a\x84\xbc\xba\xe3\x83\xd8\x5a\x47\x21\xa7\x51\xad\x7a\xfa\xc5\x42\x8e\x5e\x57\x9b\x4e",
"\x51\x14\x5a\x3f\xa8\x25\x8a\xac\x10\x6f\x65\xf3\x41\x59\xd2\x3c\x54\xb4\x8b\x6d\x54\xec\x04\x21\x74\x8b\x39\x39\xab\x67\x78\xeb",
"\xe0\x5e\xeb\x2b\x8c\x18\xad\x2c\xb2\xd1\x03\x8c\x04\x3d\x77\x0a\x0d\x51\xb9\x6b\x74\x8b\xc3\x4b\xe3\xe7\xfc\x6f\x37\x90\xce\x53",
"\x29\xa9\x0a\xe1\xdc\xee\x66\x33\x5e\xce\x42\x87\xa0\x64\x82\x71\x65\x30\x50\x99\x12\xbe\x86\x3c\x85\xa2\xa0\x3a\x64\x50\xa5\xb6",
"\x6b\x5c\xf4\x15\x12\x25\x52\x37\x06\x4e\x92\x74\xca\x8f\x8a\x3f\xef\x82\x0c\x45\xaa\x60\x67\xc9\xc6\xa0\xe6\xf5\x75\x1a\x04\x21",
"\x3c\x0a\x36\x99\x0f\x7e\xef\x89\xb2\xd5\xf4\x54\xb6\x45\x2b\x6d\xf1\x30\x46\x09\x90\x3f\x31\xf4\x75\x50\x2e\x40\x50\x24\x1d\xd8",
"\x52\x5d\x9b\x51\xa8\x0c\xa0\xcd\x4c\x58\x89\xa9\x6f\x85\x7e\x73\xf3\xa8\x0d\xa1\xff\xba\xe5\x98\x51\xe0\xf5\x1b\xdf\xb0\xb6\xcd",
"\x08\x97\x93\x5f\xf2\xe0\xe7\xcc\x23\xa0\x36\xec\x07\x91\xd5\x87\xb4\x79\x9a\x29\x9c\x8d\x6d\x65\xf3\x64\xa8\xbd\xff\x64\x57\x60",
"\x2d\xa3\x30\xa2\x08\x84\x09\xef\xc3\x51\x11\x84\x45\xa8\x24\xf1\x1e\xdb\xe5\x1c\xf3\xd6\x53\xb2\x98\x05\x37\x85\x09\x7f\xe4\x0e",
"\x09\x2d\x04\x28\x4f\xde\xb6\x76\x2e\x65\xe6\xac\x5b\x81\x39\x20\xd6\xc6\x9a\x5e\x99\xd1\x10\x76\x9c\x5c\x1a\x78\xe1\x1c\x5b\xa0",
"\xcb\x98\x90\xd4\xe3\x03\xa4\xc0\x30\x95\xd7\xbc\x17\x6c\x42\xde\xe1\xb4\x7d\x8a\xa5\x8e\x2f\x44\x2e\xc1\x51\x4c\x8f\x9e\x3c\xec",
"\x40\x26\x3b\x08\xb3\xc3\x65\x95\x29\xab\x60\x5d\x1d\xaa\x30\x33\xdb\x0f\xdc\x4b\x19\xc2\x6a\xa3\x75\xbe\x0c\x19\x68\x68\x07\xe6",
"\x23\x80\x46\xcf\xe1\x26\xa1\xf8\xab\x96\xd8\xb6\x2f\x6a\xa5\xec\x97\xba\xb8\x30\xe2\xba\xe5\xb1\xb6\xab\x2d\x31\x89\x4c\x79\xe4",
"\x96\xbf\x3e\xe7\xc6\x67\x3b\x69\xc6\xaa\x17\x3b\xb4\x4e\x21\xfa\x63\x6b\x1c\x2c\x73\xf4\x35\x6a\x75\x99\xc1\x21\x28\x4a\x51\xcc",
"\xe6\xa7\xb0\xbc\x01\xa6\x27\xa7\xd0\xff\xb0\x7f\xad\xdb\x3a\x4d\xd9\x6b\x6f\x52\x08\xac\x26\x10\x7b\xda\xeb\x3a\xb1\xec\x82\x17",
"\x72\xb9\x91\x47\x83\x9b\xcf\xb0\x62\xd2\x90\x14\xec\x09\xfe\x20\xa8\xf2\x61\x74\x8b\x59\x25\xb0\x01\x71\xef\x3c\xb8\x49\xa4\xc1",
"\x3e\xc5\xad\x51\xe6\x87\x94\x64\xdf\xbc\xcb\x9f\x4e\xd7\x6c\x63\x25\x05\x6a\x42\x54\x8d\x59\x94\xba\x86\x9d\xa9\xc4\xc0\x39\xa8",
"\x26\xf4\x1e\x42\x68\xbe\x59\xf5\xde\x07\x55\x2b\x51\xfa\x52\xd1\x8d\x88\xbe\x94\xf8\x89\x5e\xb4\xa1\x6d\xe0\xf3\x94\x0c\xf7\x12",
"\xbe\x03\xe9\x54\x1f\x56\xac\x6e\xd1\xe8\x14\x07\xdc\xd7\xcc\x85\xc0\xff\xc5\x38\xc3\xc2\xc2\xc8\xa9\xc7\x47\xed\xbc\xf1\x31\x00",
"\x42\xf0\xb0\x36\x68\x7c\xbd\x77\x17\xc9\xef\xed\x69\x91\xc0\x0d\x4e\x3e\x7b\x03\x2d\xc9\x65\xa2\x55\x6c\x02\x17\x7d\xfd\xad\x0f",
"\x39\x43\xa7\x96\xcc\x7c\x53\x52\xaa\x57\xcc\xf5\x44\x29\x5b\xfd\x6f\xb6\x9a\xae\x14\x7b\xc8\x23\x5a\x00\x20\x2d\xc6\xed\x68\x38",
"\xc1\xc4\x31\x0e\x5d\x46\x7d\x24\xe8\x64\x17\x7b\xdb\xfc\x57\xcb\x5d\x29\xaa\xc6\x97\x48\x1b\xfa\x9c\x11\xdd\xbe\xeb\xfd\x4c\xc8",
"\x29\xe0\x06\x2a\x01\x7a\x93\xb2\xf2\xf5\x20\x7a\x60\x8a\x96\xdf\x4d\x55\x4c\x5d\xe9\x76\xbd\x02\x76\xc2\x59\x0a\x03\xbd\x3e\x94",
"\x32\xcc\xcc\x4f\x24\x94\x99\x06\x1c\x0a\xfa\x18\xf5\x34\xc8\x25\xd0\x10\x34\xa1\xf6\x81\x5f\x55\x06\xbf\x4c\x4f\xf5\x5d\x13\x51",
"\xa2\xd3\x2c\x28\xeb\x59\x45\xb8\x58\x72\x69\x7d\x7c\xfb\xe8\x78\x13\xc0\x9a\x0e\x1b\xe2\x86\x11\x56\x37\x55\xf6\x8b\x9c\xb8\x8b",
"\x28\x99\x9a\xf3\x2b\x55\xdd\xb7\xdc\xfc\x26\x37\x6a\x24\x4a\xa2\xfe\x29\x72\x33\xce\x7a\xbe\x49\x19\xa1\xae\xf2\xf7\xe2\xce\xe7",
"\x00\xc3\xe8\x69\x52\xee\xbb\x11\x3d\x91\xd1\x18\x62\x90\x77\xb3\x37\x0e\xbc\x41\xee\xac\xb4\x19\x76\x2d\x2d\xe3\x0a\x43\xc0\x9c",
"\xc5\x09\x93\x5f\x38\x12\xad\x9b\x36\x37\x54\x21\x65\x61\xe0\xa5\x29\xfc\x2d\x5b\x8e\x86\xbf\xa7\x30\x2b\x8d\x14\x9b\x7d\x04\xaa",
"\x48\x80\xf4\x0f\x2e\x55\x7c\xff\x38\x10\x06\x20\xb9\xaa\x1a\x3a\x75\x3c\xb6\x93\xaf\x16\xcd\x3d\x95\x84\x15\x83\xed\xcb\x57\xa8",
"\x4b\x52\x29\xb3\x25\x0c\x8c\x08\xb9\x8c\xb7\x10\xd6\xc0\x56\x14\x42\x71\xde\x09\x9a\x57\xae\x09\xf5\xd2\x09\x7f\xc4\x1b\xd4\xf1",
"\x8c\x74\x8a\xe5\xdc\xc1\x06\x14\xcc\x13\x40\x64\xc9\x93\x67\xd2\x8f\x31\x31\xd1\xf1\xdd\xa0\xc9\xc2\x9e\x99\x27\x9d\xc1\xbd\xd9",
"\x60\x71\xdb\x01\xb5\x0c\x65\x8c\xf7\x86\x65\xc2\x4f\x1d\x21\xf2\x1b\x4a\x12\xd1\x6b\xfc\xfa\xa6\x81\x3b\xf6\xbb\xc4\xd0\xa1\xe8",
"\x44\x29\xf3\x2d\xb1\xcc\x70\x56\x79\x19\xd7\xd4\x7b\x84\x4a\x91\xcf\x13\x29\xa6\xcd\x11\x6f\x58\x23\x05\xf3\xb7\xb6\x0c\xd6\x0b",
"\xdc\xd0\x26\xfd\x2f\xf8\xd5\x17\xe2\x77\x9d\x67\xb3\xd2\xd5\xf9\xa7\xaa\x39\xf1\x9c\x66\xfa\x8f\xf2\xca\xb6\x6d\x5c\x64\x61\xc6",
"\x07\x5d\xe9\x97\x49\x72\x62\xa9\xd1\x05\xaf\xea\xda\xae\xfc\x63\x48\xb2\x5c\xe0\xe0\x12\x65\x05\xc2\x4a\xa9\x39\x6c\x25\x1e\x85",
"\x02\x96\xe2\xce\x99\x9e\x67\xc7\x63\x52\x61\x3a\x71\x8e\x11\x51\x6f\xe1\xb0\xef\xc3\xff\xdb\x89\x18\xfc\x99\x9d\xd7\x6a\x73\xa5",
"\xde\xc8\xa9\x33\xdb\xa0\x44\x63\xed\x9b\xb7\xd5\x33\x38\xff\x87\xf2\xc2\x3c\xfb\x79\xe0\xe9\x88\x44\x9f\xc6\x31\x25\x2c\x9d\xcc",
"\x30\x33\xff\x03\xe6\xf5\x23\x72\x66\x38\xb4\x3d\x95\x4b\xc6\x66\xcd\xd2\x64\x83\xfa\x5a\xbc\xf9\x83\x07\x95\x2f\xf8\x8f\x80\xee",
"\x65\xdb\x1b\x25\x9e\x30\x5a\x52\x04\x2e\x07\xe1\x11\xf4\xfa\x4a\xf1\x65\x42\xc8\xba\xcd\x33\x65\x5f\x75\x3e\xf6\x42\x22\x88\x90",
"\x42\xff\x11\xdd\xb4\x6d\xfe\x5f\xa8\x95\xe7\xba\xbf\x88\xee\x27\x79\x0c\xde\x53\xa9\x13\x9f\xc3\x84\x34\x6a\x89\xe8\x02\xa3\x27",
"\x59\x62\x6c\xac\x38\x0d\x8f\xe0\xb8\x0a\x6d\x4c\x44\x06\xd6\x2b\xa0\x68\x3a\x2f\x0f\x68\xd5\x0a\xd5\x06\xca\x1b\x1c\xf2\x53\x47",
"\x5e\x23\x8d\x35\x1e\x16\xd4\x90\x9c\xa3\x94\xf1\xdb\x03\x26\xa6\x0d\x33\xc9\xac\x7b\x4d\x78\xae\xfc\xf1\x7a\x6d\x9c\xc7\x2b\xe9",
"\xb2\xbc\x75\x14\x20\x17\x27\xd7\x73\xc0\x9a\x1c\xfc\xfa\xe7\x93\xfc\xdb\xad\x98\x02\x42\x51\xcc\xb5\x10\xdf\x0c\x26\x9b\x04\xe6",
"\x0d\x10\xc4\xb2\xf5\x63\x64\xb4\x75\xb6\x0b\xd2\x93\x32\x73\xc8\xb1\xed\x21\x76\x35\x3e\x59\xe6\x5f\x96\x8c\x61\xe9\x3b\x7d\x99",
"\x0e\xe5\x06\x7c\xe4\x88\x83\x70\x18\x24\xc5\xb1\xad\x91\x69\x59\x98\x91\x6a\x37\x02\xcf\x80\x86\x96\x2f\xbe\x58\xaf\x74\xb2\xd6",
"\x45\xb0\x7a\x2f\x38\x7e\x04\x7a\x6b\xb0\xe5\x9b\x7f\x22\xfb\x56\x18\x2d\x57\xb5\x0e\x84\xe3\x86\xa3\x8c\x2d\xbb\x7e\x77\x38\x37",
"\xa7\xc8\xf4\xfa\xf3\xcb\xb0\x88\xca\xc7\x75\x3d\x81\xf8\xec\x4c\x38\xcc\xb9\x7c\xd9\xda\x81\x77\x41\xf4\x92\x72\xe8\xd0\x12\x00",
"\xa4\x68\x0f\xab\xf6\x06\xd6\x58\x08\x93\x43\x4e\x81\xc1\x30\xff\x7e\xc9\x46\x7a\x15\xe6\x53\x46\x92\x44\x34\x65\xf2\x64\xd3\xc9",
"\x00\x40\x15\x33\x02\xb8\x8b\xee\x27\xeb\x4f\x1e\xca\x68\x55\x03\x9e\x1a\x05\x73\x70\xf5\xe8\xc6\x15\x72\x4f\xa5\x21\x5b\xad\xa3",
"\xfc\xdf\xe5\x70\xe6\xdc\x6e\x76\x8e\xf7\x51\x38\x03\x3d\x99\x61\xf7\x80\x45\xad\xca\x53\xbe\xb6\xfd\xb5\x20\xf6\x41\x7e\x0d\xf1",
"\x13\x9f\x84\x12\xa7\xc6\xfd\xc4\x3d\xcf\xbb\xcd\xba\x25\x6e\xe5\x56\x54\xeb\x36\xa4\x0f\x33\x82\x49\xd5\x16\x2a\x1f\x69\xb9\x88",
"\x67\x7c\x0b\x1a\xdd\x39\x90\xfa\xd5\x1f\x49\x25\x53\xd3\x53\x31\x15\xc5\x0a\x24\x2a\x91\x94\x37\xcc\xb1\x45\x94\x30\x11\xd2\xbf",
"\xb0\xf1\xfb\xad\xc1\xd7\xa7\x75\x57\xd3\xd8\x36\xf7\x69\x8b\xd9\x86\xa3\xec\x9f\xc5\xd5\x34\xad\x34\x03\x97\x0f\x07\x11\x76\xf7",
"\x06\x0d\x25\x12\x6e\x45\x30\x94\x14\xb3\x80\xee\x29\xf9\x00\x84\x0b\x68\x9e\xae\x42\x17\xa8\xe6\x21\x56\x3f\x13\x0c\x1d\x45\x7f",
"\x92\x7c\x2a\x58\x0d\x51\xa5\x98\x17\x7f\xa5\x4c\x65\xe9\xd2\x61\x0f\x5f\x21\x2f\x1b\x6c\xb2\xfb\xf2\x74\x0b\x64\x36\x8f\x01\x0a",
"\xc0\xd8\x8d\xb1\x1d\x0f\x52\x97\x54\xd2\x90\xed\x5f\x4c\x34\xb4\xdb\xa8\xc4\xf2\xe5\xc4\x14\x88\x66\xda\xab\xea\xb0\xd2\x5f\x9c",
"\xd2\x5b\x5e\x4d\x07\xf5\x94\xc6\x40\xdc\xd9\x3c\xfc\x8a\xb3\xf0\xa3\x83\x48\x15\x0b\xd0\xbf\xae\x89\xf4\x04\xfb\xb0\xd8\x11\xc6",
"\x74\x33\xf1\x4b\x40\xc6\x74\xc5\xe8\x7b\x62\x10\xc3\x30\xd5\xbc\xaf\x2f\x6f\x52\xd6\x32\xae\x29\xe9\xb7\xcf\x3c\xa4\x05\x66\x5b",
"\x0c\xf8\x44\x00\xc0\x95\x82\xee\x29\x11\xa5\xb1\x58\x23\x32\xc9\x92\xd1\xcd\x29\xfc\xf8\x11\xcb\x1d\xc0\x0f\xcd\x61\x75\x7d\xb0",
"\x4a\xe4\x2c\x1f\x11\xa9\x8d\xee\x07\xa0\xd7\x19\x9f\x61\x16\x99\x51\x1f\x1f\xb9\x51\x20\xfa\xbc\x4c\x3c\x34\x9c\x48\x54\x67\xfe",
"\xf7\xb3\x11\x2b\x97\x45\xb7\x66\xc8\x35\x9d\x25\xe3\x15\x97\x5d\x31\x59\x93\x5a\x8d\xdb\x3e\x30\x35\xd2\x1e\xd1\x24\xa9\x01\x3f",
"\xea\x3c\x55\x69\x40\x5e\xd0\x2e\xc2\x42\x98\x53\x4a\x98\x3b\xcb\x5d\xe1\x13\xc1\x8b\xc3\xfd\x01\xa4\xdd\x0b\x58\x39\xcd\x17\xb9",
"\x5c\x0b\x42\x9e\x59\x35\x81\x44\x57\x93\x4f\xa9\xc1\x0a\xc7\xa8\x8e\x19\x06\x8f\xa1\xbd\x15\x28\x79\xe4\xe9\xb8\x9c\x10\x39\x21",
"\xb4\xd4\x7e\xa7\x90\x92\x0a\x45\x31\xe3\xdf\x5a\x4b\x4b\x07\x21\xb7\xfe\xa6\xb4\x9a\x35\x67\x9f\x06\x52\xf1\xe5\x90\x42\x26\x02",
"\xec\xe0\xa9\x00\xea\x08\x9e\x73\x07\x41\x49\x96\x14\xc0\x91\x74\x32\x24\x6c\xeb\x5e\x11\x59\x9e\xe3\xa1\xbb\x67\x9e\x24\xfd\x2c",
"\xae\x79\xe7\x60\xc7\x39\xd6\x21\x4c\x1e\x31\x47\x28\xa7\x8a\x6c\xb6\x06\x0c\xce\x20\x6f\xde\x24\x40\xa6\x97\x35\xd6\x39\xa0\xa2",
"\xce\x0a\x44\x30\xd0\x90\xba\x2f\x1b\x46\xab\xea\xae\x0c\xb5\xfd\x17\x6a\xc3\x9a\x23\x68\x88\xfa\x36\x3b\xf6\xf9\xfd\x60\x36\xd9",
"\x5c\x15\x85\xb1\xa1\xc9\x56\xc7\x75\x54\x29\x54\x4f\x35\x96\x51\x5d\xfd\xf9\x28\x37\x36\x20\xc5\x1b\x06\x06\xa5\x20\xc6\x24\x5a",
"\x0a\xf5\xcc\xb3\xd3\x3a\x9b\xa9\x20\x71\xc9\x63\x7b\xe6\x25\x40\x30\xd6\x19\x98\x73\x3a\x5e\xb3\x58\x3e\x86\x5e\x17\x84\x4e\x05",
"\x37\xdd\xe6\xbd\x8a\x7a\x36\x11\x1c\x3a\xc5\x7e\x0a\xc2\x0b\xbb\x93\xce\x33\x74\xd0\x85\x2b\xca\xcc\x9a\x2c\x8c\x8c\x30\x07\x9e",
"\x0b\xe4\x91\x2b\xfd\x7a\x79\xf6\xeb\xfa\x1c\x06\xa5\x9f\x0f\xb4\x02\xbd\x4f\xe0\x15\x82\x65\x78\x05\x09\xed\xd0\xe5\x62\xea\xc1",
"\x19\xa2\x12\xe6\xfc\x32\x4f\x4c\xb9\xee\x5e\xba\x60\xf5\xc1\xfc\x01\x91\x79\x9a\x44\x32\x26\x5c\xbe\xaa\x33\x07\xc7\x6a\x7f\xc0",
"\xe7\xaf\x7b\xcb\x86\xbd\x6b\xab\x18\x35\xf6\x10\x67\x1c\x39\x21\x44\x19\x65\xa8\x39\x67\x3a\xc3\x44\x44\xcf\x0c\xe7\xb2\x16\x4e",
"\x43\xba\x8d\x96\xd5\xe8\xe5\x4c\xab\x59\xd8\x2d\x49\x5e\xec\xa7\x30\xee\xb1\x6e\x47\x43\xed\x13\x4c\xdd\x49\x5c\x51\xa4\xfc\x89",
"\xfd\x22\x38\x33\xab\xff\xa9\xcd\x6c\xc1\x84\x8d\x77\x59\x96\x73\x64\x35\x85\x92\x5a\x7e\xe5\x12\x59\xd6\x7c\x44\xd3\x61\xcc\xe8",
"\x32\x43\xaa\xb1\x8e\x27\x3a\x9b\x9c\x42\x80\xa5\x7a\xec\xef\x27\x8e\x10\xbf\xff\x19\xab\xb2\x60\xd7\xa7\x82\x0e\x41\x73\x90\x99",
"\x00\xc0\x29\x01\x47\x2d\x74\xe8\x27\x67\x43\xc8\x47\xb8\x14\x8b\xe3\x79\x9b\x0e\x30\x37\xc1\xdf\xdc\xa2\x1f\xa8\x1a\xd4\xb9\x22",
"\x18\xe1\x70\x7b\x31\x9c\x27\x9c\x7e\x02\x04\x07\x40\x88\xcc\x39\x28\x60\x07\xa1\xcf\x6c\xb6\xe2\x69\xd5\x06\x7d\x8d\x06\x28\xc6",
"\x8f\x23\x31\x3a\xdb\x35\x78\x2a\xdb\x0b\xa9\x7f\xef\xbf\xbb\x8b\xbc\x5f\xc4\x0a\xe2\x72\xe0\x7f\x6d\x46\x29\xa5\x30\x5a\x3f\xa2",
"\xad\x93\x8d\x15\xec\xfd\x70\x08\x3c\x47\x4e\x16\x42\xa8\x8b\x07\x8c\x3c\xea\x02\xcd\xbd\xdf\x66\xd4\xfb\x1c\x01\xb9\xb2\x9d\x9a",
"\x45\x3b\xe8\xf6\x3c\xc6\xb1\x16\xe2\x04\x96\x59\xe0\x81\xd8\x96\x49\x1c\xf1\xa4\x26\xe3\xd5\xf0\x29\xf9\x81\x46\xa3\xf4\x42\x33",
"\xfd\x33\xfb\x27\x35\xcc\x5e\xf4\x66\xa5\x48\x07\xd3\x43\x66\x22\x40\x72\x87\xe3\x25\x27\x6f\xcd\x3e\xd1\x29\x0c\x98\xbd\x05\x33",
"\x88\x07\x6e\x98\xd4\x5e\xd3\xad\xf0\xc5\x35\x54\x11\xfe\x8c\xa7\x93\xeb\x7c\xec\x1a\x1c\x61\xf5\xe1\xec\x33\x7e\xae\x26\x74\x63",
"\x55\xfe\xe5\x4c\x0d\x0d\x87\x37\x24\x86\x4d\xc0\xb2\xa1\x0b\x38\xb7\xf4\x03\x00\xee\x9c\xae\x4d\x9b\xaa\xf8\xa2\x02\xc4\x04\x9a",
"\xe5\xb0\x77\x2b\xe0\x2e\x2b\xc8\x07\x80\x48\x74\xcf\x66\x9e\x97\xaa\x36\xf5\xaf\xf1\xf1\x2f\xa0\xa6\x31\xa3\xc7\xb4\xdd\x0d\xc8",
"\x68\x39\xfc\xae\x98\x57\x74\x42\x7c\x65\xfe\x38\xe7\x73\xaa\x96\xec\x45\x1a\x41\x2c\xaa\x53\x54\xad\x9e\x2b\x9b\x54\xff\xe6\xc1",
"\x27\x43\x40\xf7\x18\x5a\x0c\xc0\x47\xd8\x2e\xcf\xb2\xcc\xe5\xbd\x18\x76\x4e\xe5\x58\xb5\x22\x78\x94\x56\x5c\x2f\x9f\xe9\xf6\xab",
"\xb1\x79\xe1\xab\x6d\xc0\xb1\xae\xe7\x83\xad\xbc\xad\x4a\xd6\xbb\x75\xa8\xa6\x4c\xb7\x98\xf3\x0c\x0d\xd2\xee\x8a\xaf\x43\xe6\xde",
"\x3c\x6f\x99\x17\x41\x8e\x99\x1e\xd4\x15\x40\xd8\xd8\x82\xc8\xca\x51\xd5\x82\xa8\x2f\xd0\x1b\xff\x6c\xdf\x26\x59\x14\x54\xfa\xf5",
"\x74\x62\xb7\xae\x48\xae\x94\x69\x47\x42\x22\xd4\xdf\x2f\x0c\x4f\x72\xcd\xef\x7f\x3a\x69\xa5\x24\xd4\xfc\xcc\x5e\xd0\xfd\x34\x3f",
"\x22\xbe\x05\x09\x55\x34\x76\x61\x68\x5a\x43\x43\xc5\x1f\x11\xc7\x81\x16\x74\xe0\x30\x38\x6d\x22\x64\xcd\x12\xec\xbf\x54\x4b\x7c",
"\x23\x78\x7e\xb3\x42\xfd\x38\xda\x73\xce\x78\x50\x23\x17\x6f\x98\x30\x42\x67\xc6\xf6\xfa\x8a\x50\xe7\x18\xda\x09\x6c\x7a\x79\x51",
"\x18\xb1\x2a\x09\x44\x82\x44\x18\x03\x44\xd7\xe5\xf8\x02\x8a\x0c\xa5\x3c\xa0\xf3\xbd\xdf\xec\x06\xd0\x0f\x99\x56\x19\xc3\xfc\x0b",
"\x21\x21\xa2\xbb\x8e\xbb\xf2\xe6\xe8\x2c\x78\x2b\x6f\x3c\x6b\x79\x04\xf6\x86\xaa\x49\x5d\xef\x25\xcf\x1c\xf5\x2a\x42\xe1\x61\x09",
"\x02\x5e\x7b\xe9\xfc\xef\xd6\xa8\x3f\x44\x71\xbb\xa0\xc1\x1f\x1c\x11\xbd\x50\x47\x04\x7d\x26\x62\x6d\xa2\x4e\xe9\xa4\x19\xcd\xc4",
"\x0a\xe8\xd1\xdd\x56\xa8\xa0\x00\xce\xd7\x4a\x62\x70\x52\x93\x3d\x2e\x9b\xff\x31\xd2\x51\xde\x18\x5b\x3c\x0c\x5f\xc9\x4a\x44\xdb",
"\x38\xc1\x8d\xb0\x50\xb0\xb2\xb0\x7f\x65\x7c\x03\xdb\x1c\x95\x95\xfe\xba\xe0\x31\x9c\x74\x6c\x3e\xed\xe6\x77\xe2\x1c\xd2\x38\xb0",
"\xd2\x05\x28\x6b\xff\xdf\x09\xbc\x03\x3c\x09\xe9\x5c\x51\x9c\x1c\x26\x7b\x40\xc2\xee\x8b\xab\x70\x3c\x6a\x2d\x86\x74\x1c\xcd\x3e",
"\x80\x01\xd7\x16\x1d\x66\x2a\x6f\x4a\xfb\x4d\x17\x82\x31\x44\xe0\x42\xfd\x24\x69\x6d\x89\x04\x38\x0d\x48\x06\x52\x09\xf2\x82\x58",
"\x91\x31\x47\x68\xda\x14\x09\x99\xe6\x82\xd2\xa2\x90\xd4\x8b\x78\xbb\x25\xa3\x55\x25\xea\x12\xc1\xb1\xf9\x63\x4d\x14\x60\x2b\x2c",
"\x67\x09\xa2\xd7\x92\x52\x48\xfe\x17\x2e\x9b\xc5\x49\x5f\x45\xb9\xbb\x74\x06\x0c\x43\xe1\xc5\x8e\x67\x1f\x0e\x6c\x43\x4f\xd8\x2b",
"\xe7\x57\x14\xf8\xe0\xff\x45\x60\x5f\x6f\xc7\x68\x9a\x1a\x89\xc7\xdc\xd3\x4a\xab\x66\xc6\x13\x1c\x63\xfe\xfa\xca\x58\x45\x39\xcf",
"\xdf\xae\xfd\x06\xb6\x80\xf9\xea\x83\x7e\x78\x15\xfc\x1c\xc7\xd1\xf4\xcc\x37\x56\x41\xac\x85\x06\x67\xab\x20\x73\x9f\x46\xad\x22",
"\x6c\xb5\x1a\xe8\x71\xfb\xd5\xd0\x7c\x5a\xad\x6f\xf8\xee\xa4\x3d\x34\x06\x30\x89\x52\x86\x03\xca\x9c\xeb\x8b\x4f\x52\xf6\x8d\xdc",
"\xdb\x2a\x92\x47\x17\x7e\x8c\xdd\x50\xfe\x94\x33\xd0\x66\xb8\x6f\xfd\x2a\x84\x30\x1a\xa6\xb2\xeb\x60\xf3\x61\xcf\xff\x07\x70\x04",
"\x05\xc1\x5a\x75\xd1\x83\x30\x13\x82\xa0\x82\xf6\xd7\x6b\xf3\xab\x4c\x52\x0b\xf1\x58\xab\xca\x44\x33\xd9\x88\x11\x34\x46\x16\x86",
"\xbb\x11\x35\xb5\x1a\xcc\xa8\x34\x8d\x28\x5d\xc5\x46\x1d\x10\xe8\xf5\x72\x60\xe7\xd0\xc8\xcc\x4a\x09\x27\x34\xd5\x3f\xc4\x0c\xbc",
"\x2d\x36\x64\x21\x35\x16\x6b\xbb\x29\x66\x24\xdc\xa8\x78\x92\x59\x63\xc7\xda\x78\x5e\x42\xe9\x40\xf0\x2d\x01\xbe\xb7\xc4\x77\xd5",
"\xe8\x6c\xb7\x7d\xe7\xb6\xa8\x02\x5f\x9a\x54\x6f\x6c\x45\xd1\x35\xf4\x71\xe6\x64\x96\x3c\xf7\x0b\x38\x1b\xee\x2d\xfd\x0f\xde\xf4",
"\x08\x56\xa1\xda\x15\xb2\xb3\xe8\x99\x9b\xf9\xfc\x51\xbb\xde\xdd\x40\x51\xe2\x1f\xab\x13\x02\xe2\xce\x76\x61\x80\xb4\x93\x1d\x86",
"\xbe\x54\xf7\x27\x9e\x69\xfb\x76\x51\xf9\x8e\x91\xd2\x40\x69\xdb\xc7\xc4\xc6\x7e\x65\x85\x0e\x48\x66\x22\xcc\xbd\xc4\x4d\x9a\x57",
"\x70\x49\xf3\xc9\x39\xef\xe7\x6a\x55\x56\xc2\xa2\xc0\x43\x86\xdb\x51\xda\xf6\x1d\x56\xb6\x79\xf4\x86\x8b\xb0\x98\x3c\x99\x6e\xbb",
"\xf5\x96\xe6\x4f\x4c\x5d\x7c\x37\xa0\x04\x93\x72\x8d\x87\x56\xb2\x43\xcf\xdc\x11\xe3\x37\x2d\x6d\x6d\xfe\xff\xc1\x3c\x9a\xb9\x60",
"\x38\x71\xe1\x67\x58\xa1\x77\x89\x07\x66\x7f\x78\x58\x93\x59\x73\x4f\x7f\x62\xf9\xdc\x95\x3e\xc5\x58\x94\x6d\xcd\xbe\x69\x51\xe3",
"\x56\x06\x6e\xd0\x7b\xad\x3b\x5c\x14\x74\xe8\xfa\xe5\xee\x25\x43\xd1\x7d\x79\x77\x36\x9b\x34\x45\x0b\xd0\x77\x55\x17\xe3\xb2\x5c",
"\x06\x50\x8a\xac\xb4\xed\x0a\x13\x98\xa2\xb0\xda\x5f\xa2\xdb\xf7\xda\x43\x5b\x56\xda\x76\xfd\x83\xc7\x59\xa5\x0a\x51\xc7\x5c\xaf",
"\x22\x3f\x61\xc3\xf4\x43\xc5\x04\x7d\x1a\xeb\x90\x5b\x05\x51\x00\x5a\x42\x6f\x08\x4b\x7a\x50\x38\x49\x05\xe7\xe4\xec\xb7\x61\xa1",
"\x10\x72\xbe\xb3\xff\x6b\x19\x1b\x3d\xf1\xa3\x39\xe3\xa8\xc8\x7a\x8d\xc5\xea\xe7\x27\xf2\xb9\x93\xea\x51\xb4\x48\xe8\x37\x63\x6a",
"\xd5\x56\x2f\xb9\x0b\x0b\x3d\xeb\x63\x3a\xb3\x35\xbc\xbd\x82\xce\x10\x95\x34\x66\xa4\x28\xb3\xf2\x7c\xb5\xb2\x26\xb4\x53\xea\xf3",
"\xf5\x1b\xdb\x0a\xd9\x24\x17\x81\x31\xc2\x1e\x39\xa8\xcc\xd1\x91\xe4\x6b\x55\x12\xb0\xf2\xe1\xcc\x84\x86\xf6\x3e\x84\xe5\xd9\x60",
"\x06\xa0\xec\x9a\x31\x6e\xb8\x9c\xb0\x41\xb1\x90\x79\x18\xe3\xad\x3b\x03\x84\x2e\xc6\x5f\x00\x4f\x6f\xa7\x4d\x57\x95\x55\x73\xa4",
"\xf8\x88\x6a\x9c\x75\x9e\x04\x26\xe0\x8d\x55\xe4\x10\xb0\x2c\x5b\x05\xaf\x3c\x28\x7b\x15\x97\x01\x75\xe4\x87\x43\x16\xff\xaf\x13",
"\x2f\x8b\x68\xde\x1e\x54\x10\x93\xf2\xd4\x52\x5a\x0d\x02\xf3\x6d\x36\x1c\xd6\x9e\xe8\xb1\xdb\x18\xe6\xdd\x06\x4a\xf3\x85\x6f\x4f",
"\xf1\x71\x8a\x00\x52\x32\xd1\x26\x18\x94\xb7\x98\xa6\x0c\x73\xd9\x71\x41\x63\x59\xb7\x0d\x0e\x54\x5d\x7e\x7a\x40\xed\x74\x2b\x71",
"\x49\x41\xc4\x29\x8f\x45\x60\xfc\x1e\x59\xd0\xf1\x6f\x84\xba\xb5\xc0\x60\x79\x37\x00\xb8\x2b\xe2\xfd\x7c\x63\x73\x5f\x16\x57\xa8",
"\xb9\xa4\xe4\x0a\x5d\x80\xfe\xdd\x10\x37\xea\xed\x95\x8f\x9f\x9e\xfe\xd4\x1e\xb0\x1a\xda\x73\xd5\x1b\x5d\xcd\x86\xe2\x7e\x0c\xbf",
"\xfd\x38\x8c\xf1\xdf\x06\xd4\x19\xb1\x4d\xed\xbe\xb2\x4c\x6f\x4d\xff\x37\xbe\xa2\x60\x18\x77\x5f\x09\xd5\x6b\x30\x67\xf0\xde\x2c",
"\x9f\x4c\xe6\xab\x5e\x8d\x44\xf3\x55\x42\x6d\x9a\x6a\xb7\x98\x33\x70\x9f\x39\xb3\x00\x73\x3b\x5b\x25\x1a\x07\x66\xe8\x95\xe0\xe5",
"\x2d\x83\xcc\xb1\xad\x98\x39\xc9\xf5\xb3\xf1\x0b\x1f\x85\x61\x77\xdf\x15\x94\xc6\x6c\xbb\xc7\x66\x16\x77\xd4\xb4\x62\xeb\xf4\x4d",
"\xa7\xc2\xe7\x91\x09\x42\xdd\x5e\x43\xe2\xf4\xeb\x15\x9b\xcd\x2b\x4e\x71\x36\x6e\x34\xa6\x81\x09\x54\x8b\x9f\xb1\x2a\xc0\xf7\xcc",
"\x22\x1d\xfb\xc7\x4b\xbb\x25\x5b\x08\x79\x36\x0c\xcc\x71\xa7\x4b\x75\x6b\x2e\x0f\x16\xe9\x38\x6b\x38\xa9\xce\x9d\x4e\x2e\x34\xf9",
"\x55\x2f\x70\x37\x47\x15\xe7\x0c\x4a\xde\x59\x1d\x65\x17\x7b\xe2\x53\x9e\xc6\x0f\x75\x12\x23\x68\x0d\xfa\xcc\xb9\xe0\xbe\x0e\xd9",
"\x73\x32\x74\x29\xc5\x05\xd8\xc5\xfd\x69\x0a\x8e\xc0\x19\xed\x4f\xd5\xa7\x26\xb6\x07\xca\xbe\x71\x50\x91\x11\xc7\xbf\xe9\xfc\x7e",
"\x81\x11\x08\x50\x22\xbd\xa8\x7e\x5f\x6a\xa4\xc1\x95\xe7\x43\xcc\x6d\xd6\xa3\xa6\xd4\x1a\xdd\x47\x5d\x26\x7d\xc6\xb1\x05\xa6\x9f",
"\x10\x76\x50\x4a\x14\x58\x10\xdf\xe3\x31\x32\x40\x07\x56\x9b\x95\xd0\x31\x0a\xc1\xe0\x89\x51\x07\x7a\xc3\xba\xf6\x68\xb2\xa4\x86",
"\x38\xbb\x97\x51\xa3\xa1\xf0\x72\xd5\x18\xaf\xe6\x92\x1a\x66\xee\x6d\x5c\xf6\xd2\x5b\xc5\x0a\xf4\x9e\x19\x25\xf2\x0d\x75\xd4\xd7",
"\x00\xd9\x78\x1d\x08\x23\xab\x49\x50\x5e\xf9\xc8\x77\xaa\x6f\xa6\x74\xe1\x9e\xcc\x8b\x02\xc3\x9e\xe2\x72\x8f\x29\x8b\xc9\x2b\x03",
"\xb8\x80\x7e\x36\x5b\xe2\x81\x3b\x7e\xcc\xd2\xe4\xc4\x9a\xfb\x0d\x1e\x13\x10\x86\x71\x56\x38\xb7\xa6\x30\x7c\xd7\xd7\xe9\x55\x6c",
"\x09\x09\x00\x5d\x62\x58\x66\xef\x8c\xcd\x8a\xe8\xaf\x57\x45\xa4\x69\xf4\xf7\x05\x61\xb6\x44\xd6\xe3\x8b\x80\xbc\xcb\x53\xeb\x06",
"\x71\x96\x18\x7f\xb1\xef\x8d\x10\x8b\x38\x0d\x37\xb2\xaf\x8e\xfd\xeb\x3c\xa1\xf6\xee\xfd\x37\xb5\xdc\x11\x4c\x60\x91\x47\x21\x6d",
"\x0e\xba\xef\x66\x2b\x14\x41\x0c\x19\x83\x95\xb1\x33\x47\xe1\xd1\x75\x33\x4e\xc6\x79\x19\x70\x9a\xd3\x7d\x65\xeb\xa0\x13\xad\xff",
"\x86\xa8\xe0\xaa\x29\xa5\xb5\x2c\x84\x92\x11\x88\xcc\x1f\x0e\xca\x9a\x79\x04\xdc\xfe\x09\x54\x46\x02\x93\x3d\x83\x77\x72\x02\x19",
"\x1c\x8d\xfa\x14\x88\x8b\xb5\x88\x48\xb4\x79\x2f\xb1\xd8\xa9\x21\x97\x6a\x94\x63\xbe\x83\x34\xcf\xf4\x5c\xc9\x6f\x12\x76\x04\x9a",
"\xd8\xb5\x8f\x6a\x89\xa7\x61\x85\x58\xe3\x7a\xfc\x36\x0c\xd7\x72\xb6\x73\x1e\x3b\xa3\x67\xf8\xd5\x87\x34\xec\xee\x22\x44\xa5\x30",
"\xc7\x25\x91\x9e\x63\x57\x12\x6d\x51\x2c\x63\x8f\x99\x3c\xf5\x72\x11\x2f\x32\x3d\xa3\x59\x64\x5e\x40\x88\xf7\x89\xeb\x4c\x7b\x8c",
"\x31\xf4\xcf\xb4\xc7\x1d\xa4\x41\x20\x75\x27\x21\x10\x3a\x16\x51\x24\x44\xc1\x3c\x2a\xc2\xd8\x57\xa7\xe6\xf1\x3c\xb6\x79\xb4\x27",
"\x1e\x0e\xb0\x81\x1a\x7c\xf1\xbd\xaf\x29\xd3\xd2\xca\xb3\x73\xca\x51\xeb\x8d\x8b\x58\x88\x9a\xb7\x72\x8e\x2d\x3a\xed\x24\x4a\xbe",
"\x3a\x5e\xc8\x3f\xe6\x70\xe5\xe2\x3a\xef\x3a\xfa\x0a\x72\x41\x05\x3f\x5b\x6b\xe5\xe6\xca\x01\x76\x6d\x6b\x5f\x91\x77\x18\x3c\x25",
"\x20\x03\xb4\x78\xb9\xfd\x1b\x3d\x76\xec\x5b\xf4\x17\x2c\x2e\x89\x15\xba\xbb\xbe\xe7\xad\x17\x83\x79\x4a\xcb\xf8\xd4\xc2\x51\x9d",
"\x32\x1c\xc3\xf2\x4a\x51\x8c\x70\xfb\x53\x7e\xe9\x47\x2b\x17\x77\xd0\x57\x27\xc6\x49\xd5\xb6\x53\x80\x82\xa9\x71\xc4\x0d\xdc\xbe",
"\x20\x0f\x98\x65\x5d\x1f\x46\xd2\x59\x9c\x2c\x86\x05\xeb\xb7\xe3\x35\xfe\xe3\x88\x3a\x32\x13\x5c\xa1\xa8\x1e\x09\x81\x9b\xc6\x4a",
"\x19\xbf\x0d\x0f\x55\xd2\xad\x33\xef\x2d\x10\x55\x20\xbd\xe8\xfb\x42\x86\xf0\x0e\x9d\x7a\x72\x1e\x3c\x95\x87\xb9\x40\x8a\x07\x75",
"\x9b\x1b\x15\xa3\xaa\xcb\x0e\x78\x6a\x60\x87\x26\xc3\xab\xfc\x94\x96\x89\x15\xce\xdc\xbd\x23\x9d\xdf\x90\x3c\x4a\x54\xbf\xcf\x0c",
"\x52\xd5\xc3\x53\x25\xce\x70\x15\x16\xf8\xb0\x43\x80\xc9\xfb\xdb\x78\xec\x6b\xcc\x13\xb4\x44\xf7\x58\xfd\xb0\x3d\x54\x5b\x06\x77",
"\xb2\x05\x83\x5b\x81\x8d\x8a\x50\x90\x3c\xf7\x69\x36\xfc\xf8\x16\x00\x60\x76\x27\x25\xbd\x74\xa5\x23\x32\x0c\xfb\xd0\x91\xc0\x38"
};